% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_scatterplotmatrix.R
\name{tm_g_scatterplotmatrix}
\alias{tm_g_scatterplotmatrix}
\title{Create a scatterplot matrix}
\usage{
tm_g_scatterplotmatrix(label = "Scatterplot matrix", selected,
  plot_height = c(600, 200, 2000), pre_output = NULL,
  post_output = NULL)
}
\arguments{
\item{selected}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Plotting variables from an incoming dataset with filtering and selecting.}

\item{plot_height}{(\code{numeric}) A vector of length three with \code{c(value, min and max)} for a slider
encoding the plot height.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Create a scatterplot matrix
}
\examples{

# datasets: single wide dataset
# Scatterplot matrix of variables from ADSL dataset
library(random.cdisc.data)

ADSL <- cadsl
ADTTE <- radtte(ADSL, seed = 1, event.descr = c("STUDYID", "USUBJID", "PARAMCD"))

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    code = "ADSL <- cadsl",
    check = TRUE
  ),
  modules = root_modules(
    tm_g_scatterplotmatrix(
      label = "Scatterplot matrix",
      selected = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variables:",
          choices = colnames(ADSL),
          selected = c("AGE", "RACE", "SEX"),
          multiple = TRUE,
          fixed = FALSE
        )
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
# datasets: different wide
# Scatterplot matrix with AGE, ACTARM, SEX, COUNTRY and STRATA2
library(random.cdisc.data)
library(dplyr)

ADSL <- cadsl
ADSL <- mutate_at(ADSL,
  .vars = vars(c("ARM", "ACTARM", "ACTARMCD", "SEX", "STRATA1", "STRATA2")),
  .funs = list(~as.factor(.))
) \%>\% select(
  "ARM", "ACTARM", "ACTARMCD",
  "SEX", "STRATA1", "AGE", "USUBJID", "STUDYID", "STRATA2"
)

ADSL_2 <- mutate_at(cadsl,
  .vars = vars(c("ARM", "ACTARM", "ACTARMCD", "SEX", "STRATA1", "STRATA2")),
  .funs = list(~as.factor(.))
) \%>\% select("ACTARM", "AGE", "STRATA2", "COUNTRY", "USUBJID", "STUDYID")

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    dataset("ADSL_2", ADSL_2),
    code = 'ADSL <- cadsl
ADSL_2 <- mutate_at(cadsl,
.vars = vars(c("ARM", "ACTARM", "ACTARMCD", "SEX", "STRATA1", "STRATA2")),
.funs = list(~as.factor(.))) \%>\%
select("ACTARM", "AGE", "STRATA2", "COUNTRY", "USUBJID", "STUDYID")',
    check = FALSE #TODO
  ),
  modules = root_modules(
    tm_g_scatterplotmatrix(
      label = "Scatterplot matrix",
      selected = list(
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            label = "Select variables:",
            choices = colnames(ADSL),
            selected = c("AGE", "ACTARM", "SEX"),
            multiple = TRUE,
            fixed = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADSL_2",
          select = select_spec(
            label = "Select variables:",
            choices = colnames(ADSL_2),
            selected = c("COUNTRY", "ACTARM", "STRATA2"),
            multiple = TRUE,
            fixed = FALSE
          )
        )
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}

# datasets: same long
# Display scatterplots of multiple continuous variables from ADTTE dataset

library(random.cdisc.data)

ADSL <- cadsl
ADTTE <- cadtte

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    cdisc_dataset("ADTTE", ADTTE),
    code = "ADSL <- cadsl; ADTTE <- cadtte",
    check = TRUE
  ),
  modules = root_modules(
    tm_g_scatterplotmatrix(
      "Scatterplot matrix for same long dataset",
      selected = data_extract_spec(
        dataname = "ADTTE",
        select = select_spec(
          choices = c("AVAL", "BMRKR1", "BMRKR2"),
          selected = c("AVAL", "BMRKR1", "BMRKR2"),
          multiple = TRUE,
          fixed = FALSE,
          label = "Select variables:"
        )
      )
    )
  )
)
\dontrun{
  shinyApp(app$ui, app$server)
}

# datasets: multiple long datasets
# Scatterplot matrix of parameters from ADTTE and ADRS datasets.
library(random.cdisc.data)

ADSL <- cadsl
ADRS <- cadrs
ADTTE <- cadtte

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    cdisc_dataset("ADRS", ADRS),
    cdisc_dataset("ADTTE", ADTTE),
    code = "ADSL <- cadsl; ADRS <- cadrs; ADTTE <- cadtte",
    check = TRUE
  ),
  modules = root_modules(
    tm_g_scatterplotmatrix(
      label = "Scatterplot matrix on two long datasets",
      selected = list(
        data_extract_spec(
          dataname = "ADRS",
          select = select_spec(
            label = "Select variables:",
            choices = names(ADRS),
            selected = c("AVAL", "AVALC"),
            multiple = TRUE,
            fixed = FALSE
          ),
          filter = filter_spec(
            label = "Select endpoints:",
            vars = c("PARAMCD", "AVISIT"),
            choices = apply(expand.grid(
              levels(ADRS$PARAMCD), levels(ADRS$AVISIT)), 1, paste, collapse = " - "),
            selected = "OVRINV - Screening",
            multiple = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADTTE",
          select = select_spec(
            label = "Select variables:",
            choices = names(ADTTE),
            selected = c("AVAL", "CNSR"),
            multiple = TRUE,
            fixed = FALSE
          ),
          filter = filter_spec(
            label = "Select parameters:",
            vars = "PARAMCD",
            choices = unique(ADTTE$PARAMCD),
            selected = "OS",
            multiple = TRUE
          )
        )
      )
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}

# datasets: different subsets of long dataset
# Display scatterplots of multiple continuous variables from ADLB dataset

library(random.cdisc.data)

ADSL <- cadsl
ADLB <- cadlb

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    cdisc_dataset("ADLB", ADLB),
    code = "ADSL <- cadsl; ADLB <- cadlb",
    check = TRUE
  ),
  modules = root_modules(
    tm_g_scatterplotmatrix(
      label = "Scatterplot matrix on two long datasets with subsets",
      selected = data_extract_spec(
        dataname = "ADLB",
        filter = list(
          filter_spec(
            vars = "PARAMCD",
            choices = levels(ADLB$PARAMCD),
            selected = levels(ADLB$PARAMCD)[1],
            multiple = FALSE,
            label = "Select lab:"
          ),
          filter_spec(
            vars = "AVISIT",
            choices = levels(ADLB$AVISIT),
            selected = levels(ADLB$AVISIT)[1],
            multiple = FALSE,
            label = "Select visit:"
          )
        ),
        select = select_spec(
          choices = c("AVAL", "CHNG", "BMRKR1", "BMRKR2"),
          selected = c("AVAL", "CHNG"),
          multiple = TRUE,
          fixed = FALSE,
          label = "Select variables:"
        )
      )
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}
}
