% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_scatterplotmatrix.R
\name{tm_g_scatterplotmatrix}
\alias{tm_g_scatterplotmatrix}
\title{Create a scatterplot matrix}
\usage{
tm_g_scatterplotmatrix(
  label = "Scatterplot matrix",
  variables,
  plot_height = c(600, 200, 2000),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{label shown in the navigation for the item}

\item{variables}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Plotting variables from an incoming dataset with filtering and selecting.}

\item{plot_height}{if scalar then the plot will have a fixed height. If a
slider should be presented to adjust the plot height dynamically then it
can be a vector of length three with \code{c(value, min, max)}.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
The available datasets to choose from for each dataset selector is the same and
determined by the argument \code{variables}.
}
\note{
For more examples, please see the vignette "Using scatterplot matrix" via
  \code{vignette("using-scatterplot-matrix", package = "teal.modules.general")}.
}
\examples{
# Scatterplot matrix of variables from ADSL dataset
library(random.cdisc.data)

ADSL <- radsl(cached = TRUE)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    code = "ADSL <- radsl(cached = TRUE)",
    check = TRUE
  ),
  modules = root_modules(
    tm_g_scatterplotmatrix(
      label = "Scatterplot matrix",
      variables = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variables:",
          choices = variable_choices(ADSL),
          selected = c("AGE", "RACE", "SEX"),
          multiple = TRUE,
          fixed = FALSE
        )
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
