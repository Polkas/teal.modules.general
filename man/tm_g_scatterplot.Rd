% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_scatterplot.R
\name{tm_g_scatterplot}
\alias{tm_g_scatterplot}
\title{Create a simple scatterplot}
\usage{
tm_g_scatterplot(
  label,
  x,
  y,
  color_by = NULL,
  plot_height = c(600, 200, 2000),
  plot_width = NULL,
  alpha = c(1, 0, 1),
  size = c(2, 1, 8),
  rotate_xaxis_labels = FALSE,
  ggtheme = gg_themes,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character}) Label shown in the navigation item for the module.}

\item{x}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec}) Variable
names selected to plot along the x-axis by default.}

\item{y}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec}) Variable
names selected to plot along the y-axis by default.}

\item{color_by}{optional (\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Defines the color encoding. If \code{NULL} then no color encoding option will be displayed.
Note \verb{_none_} is a keyword and means that no color encoding should be used.}

\item{plot_height}{optional, (\code{numeric}) A vector of length three with \code{c(value, min and max)}
for a slider encoding the plot height.}

\item{plot_width}{optional, (\code{numeric}) A vector of length three with \code{c(value, min and max)}
for a slider encoding the plot width.}

\item{alpha}{optional, (\code{numeric}) If scalar then the plot points will have a fixed opacity. If a
slider should be presented to adjust the plot point opacity dynamically then it can be a vector of
length three with \code{c(value, min, max)}.}

\item{size}{optional, (\code{numeric}) If scalar then the plot point sizes will have a fixed size
If a slider should be presented to adjust the plot point sizes dynamically then it can be a
vector of length three with \code{c(value, min, max)}.}

\item{rotate_xaxis_labels}{optional, (\code{logical}) Whether to rotate plot X axis labels. Does not
rotate by default (\code{FALSE}).}

\item{ggtheme}{optional, (\code{character}) \code{ggplot} Theme to be used by default.
\code{gg_themes} is defined internally as
\code{c("gray", "bw", "linedraw", "light", "dark", "minimal", "classic", "void", "test")}
All themes can be chosen by the user. Defaults to \code{gray}.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Create a plot with the \code{\link{ggplot2}[geom_point]} function
}
\note{
For more examples, please see the vignette "Using scatterplot" via
\code{vignette("using-scatterplot", package = "teal.modules.general")}.
}
\examples{
# Scatterplot of variables from ADSL dataset
library(random.cdisc.data)

ADSL <- radsl(cached = TRUE)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(cached = TRUE)"),
    check = TRUE
  ),
  modules = root_modules(
    tm_g_scatterplot(
      label = "Scatterplot Choices",
      x = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variable:",
          choices = variable_choices(ADSL, c("AGE", "BMRKR1", "BMRKR2")),
          selected = "AGE",
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      y = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variable:",
           choices = variable_choices(ADSL, c("AGE", "BMRKR1", "BMRKR2")),
          selected = "BMRKR1",
          multiple = FALSE,
          fixed = FALSE
        )
      )
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
