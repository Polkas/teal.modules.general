% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_simple_regression.R
\name{tm_g_simple_regression}
\alias{tm_g_simple_regression}
\title{Scatterplot and Regression Model}
\usage{
tm_g_simple_regression(label = "Simple Regression Analysis", dataname,
  response_var, regressor_var, plot_height = c(600, 200, 2000),
  pre_output = NULL, post_output = NULL)
}
\arguments{
\item{label}{label shown in the navigation for the item}

\item{dataname}{name of dataset used to generate table}

\item{response_var}{(\code{choices_selected}) Output of \code{teal::choices_selected} to define the
response variable}

\item{regressor_var}{(\code{choices_selected}) Output of \code{teal::choices_selected} to define the
regressor variable}

\item{plot_height}{if scalar then the plot will have a fixed height. If a
slider should be presented to adjust the plot height dynamically then it
can be a vector of length three with \code{c(value, min and max)}.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
This module is designed for horizontal data
}
\examples{

library(random.cdisc.data)
asl  <- radsl(seed = 1)

asl$cont  <- rnorm(nrow(asl))
asl$cont2 <- rnorm(nrow(asl))
asl$cont3 <- asl$cont * 3 + 2 + rnorm(nrow(asl), sd = .3)

attr(asl, "source") <- "random.cdisc.data::radsl(seed = 1)"

x <- teal::init(
  data = list(ASL = asl),
  modules = root_modules(
    tm_g_simple_regression(
      dataname = "ASL",
      response_var = choices_selected(c("cont", "cont2"), "cont"),
      regressor_var = choices_selected(names(asl), "cont3"),
      plot_height = c(600, 200, 2000)
    )
  )
)

\dontrun{
shinyApp(x$ui, x$server)


fit <- lm(cont ~ cont2, data = ASL)

plot(fit)
}
}
