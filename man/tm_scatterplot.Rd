% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_scatterplot.R
\name{tm_scatterplot}
\alias{tm_scatterplot}
\title{Create a simple scatterplot}
\usage{
tm_scatterplot(label, x, y, color_by = NULL, plot_height = c(600, 200,
  2000), alpha = c(1, 0, 1), size = c(4, 1, 12), pre_output = NULL,
  post_output = NULL)
}
\arguments{
\item{label}{label shown in the navigation for the item}

\item{x}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
x variable}

\item{y}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
y variable}

\item{color_by}{(\code{data_extract_spec} or \code{list} of multiple \code{data_extract_spec})
Defines the color encoding. If
\code{NULL} then no color encoding option will be displayed. Note
\code{_none_} is a keyword and means that no color encoding should be used.}

\item{plot_height}{if scalar then the plot will have a fixed height. If a
slider should be presented to adjust the plot height dynamically then it
can be a vector of length three with \code{c(value, min and max)}.}

\item{alpha}{if scalar then the plot points will have a fixed opacity. If a
slider should be presented to adjust the plot point opacity dynamically
then it can be a vector of length three with vlaue, min and max.}

\item{size}{if scalar then the plot points sizes will have a fixed opacity.
If a slider should be presented to adjust the plot point sizes dynamically
then it can be a vector of length three with vlaue, min and max.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Create a plot with the \code{\link{plot}[base]} function
}
\examples{
# Scatterplot of variables from ADSL dataset
library(random.cdisc.data)

ADSL <- cadsl

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    code = "ADSL <- cadsl",
    check = TRUE
  ),
  modules = root_modules(
    tm_scatterplot(
      label = "Scatterplot Choices",
      x = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variable:",
          choices = c("AGE", "BMRKR1", "BMRKR2"),
          selected = "AGE",
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      y = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variable:",
          choices = c("AGE", "BMRKR1", "BMRKR2"),
          selected = "BMRKR1",
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      color_by = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Select variables:",
          choices = c("RACE", "SEX"),
          selected = NULL,
          multiple = TRUE,
          fixed = FALSE
        )
      )
    )
  )
)
\dontrun{
  shinyApp(app$ui, app$server)
}
}
