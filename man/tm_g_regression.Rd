% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_regression.R
\name{tm_g_regression}
\alias{tm_g_regression}
\title{Scatterplot and Regression Model}
\usage{
tm_g_regression(label = "Regression Analysis", dataname, regressor,
  response, plot_height = c(600, 200, 2000), pre_output = NULL,
  post_output = NULL)
}
\arguments{
\item{label}{label shown in the navigation for the item}

\item{dataname}{name of datasets used to generate the regression plot (just used for labeling)}

\item{regressor}{(\code{list}) Output of \code{teal.devel::data_extract_spec}
to define the regressor variable from an incoming dataset with filtering and selecting.}

\item{response}{(\code{list}) Output of \code{teal.devel::data_extract_spec}
to define the response variable from an incoming dataset with filtering and selecting.}

\item{plot_height}{(\code{numeric}) a vector of length three with \code{c(value, min and max)} for a slider
encoding the plot height.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Scatterplot and Regression Model
}
\examples{

library(random.cdisc.data)
library(tern)

ASL <- radsl(seed = 1)
ALB <- radlb(ASL, seed = 1)

keys(ASL) <- c("STUDYID", "USUBJID")
keys(ALB) <- c("STUDYID", "USUBJID", "PARAMCD")

asl_extracted <- data_extract_spec(
  dataname = "ASL",
  columns = columns_spec(
    choices = c("SEX", "AGE", "BMRKR1", "BMRKR2"),
    selected = c("BMRKR1"),
    multiple = TRUE,
    fixed = FALSE
  )
)

alb_filters <- filter_spec(
  vars = c("PARAMCD", "AVISIT"),
  sep = " - ",
  choices = paste0(unique(ALB$PARAMCD), " - WEEK 4 DAY 29"),
  selected = paste0(unique(ALB$PARAMCD), " - WEEK 4 DAY 29")[1],
  multiple = FALSE,
  label = "Choose endpoint"
)

alb_extracted <- data_extract_spec(
  dataname = "ALB",
  filter = alb_filters,
  columns = columns_spec(
    choices = c("AVAL"),
    selected = "AVAL",
    multiple = FALSE,
    fixed = FALSE,
    label = "variable"
  )
)

app <- init(
  data = cdisc_data(
    ASL = ASL,
    ALB = ALB,
    code = 'ASL <- radsl(seed = 1)
            ALB <- radlb(ASL, seed = 1)
            keys(ASL) <- c("STUDYID", "USUBJID")
            keys(ALB) <- c("STUDYID", "USUBJID", "PARAMCD")',
    check = FALSE),
  modules = root_modules(
    tm_g_regression(
      label = "Regression",
      dataname = c("ASL", "ALB"),
      response = list(alb_extracted),
      regressor = list(asl_extracted)
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}
}
