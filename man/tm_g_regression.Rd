% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_regression.R
\name{tm_g_regression}
\alias{tm_g_regression}
\title{Scatterplot and Regression Model}
\usage{
tm_g_regression(label = "Regression Analysis", dataname, regressor,
  response, plot_height = c(600, 200, 2000), pre_output = NULL,
  post_output = NULL)
}
\arguments{
\item{label}{label shown in the navigation for the item}

\item{dataname}{name of datasets used to generate the regression plot (just used for labeling)}

\item{regressor}{(\code{list}) Output of \code{teal.devel::data_extract_spec}
to define the regressor variable from an incoming dataset with filtering and selecting.}

\item{response}{(\code{list}) Output of \code{teal.devel::data_extract_spec}
to define the response variable from an incoming dataset with filtering and selecting.}

\item{plot_height}{(\code{numeric}) a vector of length three with \code{c(value, min and max)} for a slider
encoding the plot height.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Scatterplot and Regression Model
}
\examples{

library(random.cdisc.data)
library(teal.devel)
asl <- radsl(N = 600)
adte <- radtte(asl, event.descr = c("STUDYID", "USUBJID", "PARAMCD"))
keys(adte) <- c("STUDYID", "USUBJID", "PARAMCD")
keys(asl) <- c("STUDYID", "USUBJID")

adte_filters <- filter_spec(
  vars = c("PARAMCD"), #'  only key variables are allowed
  sep = " - ",
  choices = c("OS", "PFS", "EFS"),
  selected = "OS",
  multiple = TRUE, #'  if multiple, then a spread is needed
  label = "Choose endpoint"
)


adte_extracted_regressor <- data_extract_spec(
  dataname = "ADTE",
  filter = adte_filters,
  columns = columns_spec(
    choices = c("AVAL", "BMRKR1", "SITEID"),
    selected = c("AVAL"),
    multiple = TRUE,
    fixed = FALSE, #'  Whether the user can select the item (optional)
    label = "Column" #'  Label the column select dropdown (optional)
  )
)

adte_extracted_response <- data_extract_spec(
  dataname = "ADTE",
  filter = adte_filters,
  columns = columns_spec(
    choices = c("AVAL", "BMRKR1"),
    selected = c("AVAL"),
    multiple = FALSE,
    fixed = FALSE, #'  Whether the user can select the item
    label = "" #'  Label the column select dropdown (optional)
  )
)

asl_extracted <- data_extract_spec(
  dataname = "ASL",
  columns = columns_spec(
    choices = c("SEX", "AGE"),
    selected = c("AGE"),
    multiple = TRUE,
    fixed = FALSE
  )
)

app <- teal::init(
  data = cdisc_data(
       ASL = asl,
       ADTE = adte,
       code = "",
       check = FALSE),
   modules = teal::root_modules(
       tm_g_regression(
         label = "Regression",
         dataname = c("ASL","ADTE"),
         response = list(adte_extracted_response),
         regressor = list(
           adte_extracted_regressor,
           asl_extracted
         )
       )
   )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
