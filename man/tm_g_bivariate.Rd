% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_bivariate.R
\name{tm_g_bivariate}
\alias{tm_g_bivariate}
\title{Univariate and bivariate visualizations.}
\usage{
tm_g_bivariate(label = "Bivariate Plots", dataname, x_var, y_var,
  use_density = FALSE, color_by_var, row_facet_var, col_facet_var,
  free_x_scales = FALSE, free_y_scales = FALSE, plot_height = c(600,
  200, 2000), pre_output = NULL, post_output = NULL,
  with_show_r_code = TRUE, code_data_processing = NULL)
}
\arguments{
\item{label}{(\code{character}) Label of the module}

\item{dataname}{name of dataset used to generate table}

\item{x_var}{variable name selected to plot along the x-axis by default. Variable can be numeric,
factor or character.}

\item{y_var}{variable name selected to plot along the y-axis by default. Variable can be numeric,
factor or character.}

\item{use_density}{boolean value for whether density is plotted}

\item{color_by_var}{(\code{character}) Which variable to color by}

\item{row_facet_var}{variable for x facets}

\item{col_facet_var}{variable for y facets}

\item{free_x_scales}{(\code{logical}) If X scaling shall be changeable}

\item{free_y_scales}{(\code{logical}) If Y scaling shall be changeable}

\item{plot_height}{if scalar then the plot will have a fixed height. If a
slider should be presented to adjust the plot height dynamically then it
can be a vector of length three with \code{c(value, min and max)}}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{with_show_r_code}{(\code{logical}) Whether show R code button shall be show}

\item{code_data_processing}{(\code{character}) Code that was used to pre-process the data}
}
\description{
Univariate and bivariate visualizations.
}
\details{
This is a general module to visualize 1 & 2 dimensional data.
}
\examples{

\dontrun{

N <- 100
ASL <- data.frame(
  USUBJID = paste("id", seq_len(N), sep = "-"),
  STUDYID = "study1",
  F1 = factor(sample(paste0("facet_1_", c("A", "B")), N, TRUE)),
  F2 = factor(sample(paste0("facet_2_", c("a", "b", "c")), N, TRUE)),
  cont = rnorm(N),
  disc = factor(sample(letters[1:5], N, TRUE)),
  cont2 = runif(N),
  disc2 = factor(sample(LETTERS[1:5], N, TRUE))
)

attr(ASL, "source") <- "# ASL is random data"

x <- teal::init(
  data = list(ASL = ASL),
  modules = root_modules(
    tm_g_bivariate(
      dataname = "ASL",
      x_var = choices_selected(names(ASL), "cont"),
      y_var = choices_selected(names(ASL), "cont"),
      use_density = FALSE,
      color_by_var = choices_selected("STUDYID"),
      row_facet_var = choices_selected(c("F1", "F2"), NULL),
      col_facet_var = choices_selected(c("F1", "F2"), NULL),
      plot_height = c(600, 200, 2000)
    )
  )
)

shinyApp(x$ui, x$server)
}
}
