[{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üëó Style guide üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"Github flow","title":"Contribution Guidelines","text":"repository uses Github flow model collaboration. submit pull request: Create branch. Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes. Make sure code: passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR). pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, . Receive approval. Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back. Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/teal-modules-general.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with teal.modules.general","text":"teal package extends shiny framework build interactive GUI applications using R programming language. shiny, hence teal, implemented allow building large applications combining small, decoupled modules. teal.modules.general package consisting set modules used build teal applications. ‚Äúgeneral‚Äù sense intended functions modules fundamental. contrast intended functions sister package, teal.modules.clinical, specialized around clinical data. modules teal.modules.general can combined modules teal.modules.clinical / shiny modules build large teal / shiny app. concepts presented require knowledge core features teal, specifically launch teal application pass data . Therefore, highly recommended refer README file introductory vignette teal package. See also teal.modules.clinical's README.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/teal-modules-general.html","id":"main-features","dir":"Articles","previous_headings":"","what":"Main features","title":"Getting started with teal.modules.general","text":"five areas data science teal.modules.general provides tools solutions (modules) : viewing data tabular form visualizing data plots graphs viewing data files directory examining missing extreme values data performing data analysis See package functions / modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/teal-modules-general.html","id":"example-application","dir":"Articles","previous_headings":"","what":"Example application","title":"Getting started with teal.modules.general","text":"simple application including tm_variable_browser module look like : Let‚Äôs break app pieces: lines load libraries used example. scda package containing sample data loaded two R objects: need load teal teal.modules.general already depends . next step, use teal create shiny ui server functions can launch using shiny. data argument tells teal input data - two datasets ADSL ADTTE - modules argument indicates modules included application. , include one - tm_variable_browser. shiny function shinyApp used ui server objects initialize teal app. teal app, data modules decoupled. app : app developer specified data assigned data argument. app developer specified module assigned modules argument. init function took arguments returned list, can demonstrated running: list contains two R objects named ui server.","code":"library(scda) library(teal.modules.general)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", x = ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADTTE\", x = ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     check = TRUE   ),   modules = modules(     tm_variable_browser(       label = \"Variable browser\",       ggplot2_args = teal.widgets::ggplot2_args(         labs = list(subtitle = \"Plot generated by Variable Browser Module\")       ),     )   ) ) shinyApp(app$ui, app$server) library(teal.modules.clinical) library(scda) ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADAE <- synthetic_cdisc_data(\"latest\")$adae app <- teal::init(   data = teal.data::cdisc_data(     teal.data::cdisc_dataset(\"ADSL\", x = ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     teal.data::cdisc_dataset(\"ADTTE\", x = ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     check = TRUE # to check if the code executes to the data provided, x, i.e. ADSL and ADTTE   ),   modules = modules(     tm_variable_browser(       # module name to display in the GUI       label = \"Variable browser\",       # this argument takes a set of arguments to pass to ggplot2.       # the arguments must have the same names as its ggplot2 counterpart, e.g. `subtitle`       ggplot2_args = teal.widgets::ggplot2_args(         labs = list(subtitle = \"Plot generated by Variable Browser Module\")       ),     )   ) ) shiny::shinyApp(app$ui, app$server) class(app) ## [1] \"list\" names(app) ## [1] \"ui\"     \"server\""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-association-plot.html","id":"section-teal-application-to-use-association-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"Teal application to use association plot with various datasets types","title":"Using association plot","text":"vignette guide 4 parts create teal application using various types datasets inside association plot module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-association-plot.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to use association plot with various datasets types","what":"Loading libraries","title":"Using association plot","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-association-plot.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to use association plot with various datasets types","what":"Create data sets","title":"Using association plot","text":"Inside app 5 datasets used ADSL wide data set subject data ADSL2 wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADSL2 <- synthetic_cdisc_data(\"latest\")$adsl %>% # nolint   mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1)) ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb %>% # nolint   mutate(CHGC = as.factor(case_when(     CHG < 1 ~ \"N\",     CHG > 1 ~ \"P\",     TRUE ~ \"-\"   )))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-association-plot.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to use association plot with various datasets types","what":"Create an app variable","title":"Using association plot","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_g_association using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(       \"ADSL2\",       ADSL2,       keys = get_cdisc_keys(\"ADSL\"),       code = \"ADSL2 <- synthetic_cdisc_data(\\\"latest\\\")$adsl %>%               mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))\"     ),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     cdisc_dataset(       \"ADLB\",       ADLB,       code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb %>%             mutate(CHGC = as.factor(case_when(             CHG < 1 ~ 'N',             CHG > 1 ~ 'P',             TRUE ~ '-'             )))\"     ),     check = TRUE   ),   modules = modules(     # tm_g_association ----     modules(       label = \"Association plot\",       tm_g_association(         label = \"Single wide dataset\",         ref = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL),             selected = \"AGE\",             fixed = FALSE           )         ),         vars = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL),             selected = \"BMRKR1\",             multiple = TRUE,             fixed = FALSE           )         )       ),       tm_g_association(         label = \"Two wide datasets\",         ref = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"AGE\", \"SEX\", \"STRATA1\", \"RACE\")),             selected = \"STRATA1\",             multiple = FALSE,             fixed = FALSE           )         ),         vars = data_extract_spec(           dataname = \"ADSL2\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL2, c(\"AGE\", \"SEX\", \"RACE\", \"COUNTRY\")),             selected = c(\"AGE\", \"COUNTRY\", \"RACE\"),             multiple = TRUE,             fixed = FALSE           )         )       ),       tm_g_association(         label = \"Multiple different long datasets\",         ref = data_extract_spec(           dataname = \"ADTTE\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADTTE),             selected = \"AVAL\",             multiple = FALSE,             fixed = FALSE           ),           filter = filter_spec(             label = \"Select endpoint:\",             vars = \"PARAMCD\",             choices = value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),             selected = c(\"PFS\", \"EFS\"),             multiple = TRUE           )         ),         vars = data_extract_spec(           dataname = \"ADRS\",           reshape = TRUE,           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADRS, c(\"AVALC\", \"BMRKR1\", \"BMRKR2\", \"ARM\")),             selected = \"AVALC\",             multiple = TRUE,             fixed = FALSE           ),           filter = list(             filter_spec(               label = \"Select endpoints:\",               vars = \"PARAMCD\",               choices = value_choices(ADRS, \"PARAMCD\", \"PARAM\"),               selected = \"BESRSPI\",               multiple = TRUE             ),             filter_spec(               label = \"Select endpoints:\",               vars = \"AVISIT\",               choices = levels(ADRS$AVISIT),               selected = \"SCREENING\",               multiple = TRUE             )           )         )       ),       tm_g_association(         label = \"Wide and long datasets\",         ref = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AVAL\", \"AVALC\")),             selected = \"AVALC\",             multiple = FALSE,             fixed = FALSE,             label = \"Selected variable:\"           ),           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADRS, \"PARAMCD\", \"PARAM\"),               selected = levels(ADRS$PARAMCD),               multiple = TRUE,               label = \"Select response\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADRS$AVISIT),               selected = levels(ADRS$AVISIT),               multiple = TRUE,               label = \"Select visit:\"             )           )         ),         vars = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"AGE\", \"RACE\", \"COUNTRY\", \"BMRKR1\", \"STRATA1\", \"ARM\")),             selected = \"AGE\",             multiple = TRUE,             fixed = FALSE,             label = \"Select variable:\"           )         )       ),       tm_g_association(         label = \"Same long datasets (same subsets)\",         ref = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS),             selected = \"AVALC\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         vars = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS),             selected = \"PARAMCD\",             multiple = TRUE,             fixed = FALSE,             label = \"Select variable:\"           )         )       ),       tm_g_association(         label = \"Same long datasets (different subsets)\",         ref = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"AVAL\", \"CHG2\", \"PCHG2\")),             selected = \"AVAL\",             multiple = FALSE           )         ),         vars = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select labs:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB),             selected = \"STRATA1\",             multiple = TRUE           )         )       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-association-plot.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to use association plot with various datasets types","what":"Run the app","title":"Using association plot","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-bivariate-plot.html","id":"section-teal-application-to-use-bivariate-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"Teal application to use bivariate plot with various datasets types","title":"Using bivariate plot","text":"vignette guide 4 parts create teal application using various types datasets inside bivariate plot module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-bivariate-plot.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to use bivariate plot with various datasets types","what":"Loading libraries","title":"Using bivariate plot","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-bivariate-plot.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to use bivariate plot with various datasets types","what":"Create data sets","title":"Using bivariate plot","text":"Inside app 5 datasets used ADSL wide data set subject data ADSL2 wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADSL2 <- synthetic_cdisc_data(\"latest\")$adsl %>% # nolint   mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1)) ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb %>% # nolint   mutate(CHGC = as.factor(case_when(     CHG < 1 ~ \"N\",     CHG > 1 ~ \"P\",     TRUE ~ \"-\"   )))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-bivariate-plot.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to use bivariate plot with various datasets types","what":"Create an app variable","title":"Using bivariate plot","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_g_bivariate using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(       \"ADSL2\",       ADSL2,       keys = get_cdisc_keys(\"ADSL\"),       code = \"ADSL2 <- synthetic_cdisc_data(\\\"latest\\\")$adsl %>%               mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))\"     ),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     cdisc_dataset(       \"ADLB\",       ADLB,       code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb %>%             mutate(CHGC = as.factor(case_when(             CHG < 1 ~ 'N',             CHG > 1 ~ 'P',             TRUE ~ '-'             )))\"     ),     check = TRUE   ),   modules = modules(     # tm_g_bivariate ------     modules(       label = \"Bivariate plot\",       tm_g_bivariate(         label = \"Single wide dataset\",         x = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL),             selected = \"BMRKR1\",             fixed = FALSE           )         ),         y = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL),             selected = \"SEX\",             multiple = FALSE,             fixed = FALSE           )         ),         row_facet = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL),             selected = NULL,             multiple = TRUE,             fixed = FALSE           )         ),         col_facet = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL),             selected = NULL,             multiple = TRUE,             fixed = FALSE           )         )       ),       tm_g_bivariate(         label = \"Two wide datasets\",         x = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"BMRKR1\", \"AGE\", \"SEX\", \"STRATA1\", \"RACE\")),             selected = c(\"BMRKR1\"),             multiple = FALSE           )         ),         y = data_extract_spec(           dataname = \"ADSL2\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL2, c(\"COUNTRY\", \"AGE\", \"RACE\")),             selected = \"RACE\",             multiple = FALSE           )         ),         row_facet = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL),             selected = NULL,             multiple = FALSE,             fixed = FALSE           )         ),         col_facet = data_extract_spec(           dataname = \"ADSL2\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL2),             selected = NULL,             multiple = TRUE,             fixed = FALSE           )         )       ),       tm_g_bivariate(         label = \"Multiple different long datasets\",         x = data_extract_spec(           dataname = \"ADRS\",           filter = filter_spec(             label = \"Select endpoints:\",             vars = c(\"PARAMCD\", \"AVISIT\"),             choices = value_choices(ADRS, c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),             selected = \"OVRINV - END OF INDUCTION\",             multiple = TRUE           ),           select = select_spec(             choices = variable_choices(ADRS, c(\"AVALC\", \"AVAL\")),             selected = \"AVALC\",             multiple = FALSE           )         ),         y = data_extract_spec(           dataname = \"ADTTE\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADTTE, c(\"AVAL\", \"CNSR\")),             selected = \"AVAL\",             multiple = FALSE,             fixed = FALSE           ),           filter = filter_spec(             label = \"Select endpoint:\",             vars = c(\"PARAMCD\"),             choices = value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),             selected = \"OS\",             multiple = FALSE           )         ),         row_facet = data_extract_spec(           dataname = \"ADRS\",           filter = filter_spec(             label = \"Select endpoints:\",             vars = c(\"PARAMCD\", \"AVISIT\"),             choices = value_choices(ADRS, c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),             selected = \"OVRINV - SCREENING\",             multiple = TRUE           ),           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADRS, c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"PARAMCD\", \"AVISIT\")),             selected = \"SEX\",             multiple = FALSE,             fixed = FALSE           )         ),         col_facet = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\")),             selected = NULL,             multiple = TRUE,             fixed = FALSE           )         ),         color_settings = TRUE,         color = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         fill = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         size = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         plot_height = c(600, 200, 2000),         ggtheme = \"gray\"       ),       tm_g_bivariate(         label = \"Wide and long datasets\",         x = data_extract_spec(           dataname = \"ADRS\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADRS, \"PARAMCD\", \"PARAM\"),               selected = levels(ADRS$PARAMCD)[1],               multiple = FALSE,               label = \"Select response:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADRS$AVISIT),               selected = levels(ADRS$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADRS, c(\"AVALC\", \"AVAL\")),             selected = \"AVALC\",             multiple = FALSE,             label = \"Select variable:\"           )         ),         y = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"BMRKR1\", \"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),             selected = \"BMRKR1\",             multiple = FALSE,             label = \"Select variable:\",             fixed = FALSE           )         ),         row_facet = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"SEX\", \"RACE\", \"ARMCD\", \"PARAMCD\")),             selected = \"SEX\",             multiple = FALSE,             label = \"Select variable:\"           )         ),         col_facet = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"SEX\", \"RACE\", \"ARMCD\", \"PARAMCD\", \"AVISIT\")),             selected = \"ARMCD\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         )       ),       tm_g_bivariate(         label = \"Wide and multiple long datasets\",         x = data_extract_spec(           dataname = \"ADRS\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADRS, \"PARAMCD\", \"PARAM\"),               selected = levels(ADRS$PARAMCD)[1],               multiple = FALSE,               label = \"Select response:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADRS$AVISIT),               selected = levels(ADRS$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADRS, c(\"AVALC\", \"AVAL\")),             selected = \"AVALC\",             multiple = FALSE,             label = \"Select variable:\"           )         ),         y = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"BMRKR1\", \"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),             selected = \"BMRKR1\",             multiple = FALSE,             fixed = FALSE           )         ),         row_facet = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select measurement:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = \"ARMCD\",             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         col_facet = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         color_settings = TRUE,         color = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         fill = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         size = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         plot_height = c(600, 200, 2000),         ggtheme = \"gray\"       ),       tm_g_bivariate(         label = \"Same long datasets (same subset)\",         x = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AVALC\", \"AVAL\")),             selected = \"AVALC\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         y = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARMCD\", \"BMRKR1\", \"BMRKR2\")),             selected = \"BMRKR1\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         row_facet = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AVISIT\", \"PARAMCD\")),             selected = \"PARAMCD\",             multiple = TRUE,             label = \"Select variables:\"           )         ),         col_facet = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AVISIT\", \"PARAMCD\")),             selected = \"AVISIT\",             multiple = TRUE,             label = \"Select variables:\"           )         )       ),       tm_g_bivariate(         label = \"Same datasets (different subsets)\",         x = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = \"AVAL\",             selected = \"AVAL\",             multiple = FALSE,             fixed = TRUE           )         ),         y = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = \"AVAL\",             selected = \"AVAL\",             multiple = FALSE,             fixed = TRUE           )         ),         use_density = FALSE,         row_facet = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select category:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"RACE\", \"SEX\", \"ARMCD\", \"ACTARMCD\")),             selected = NULL,             multiple = TRUE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         col_facet = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select category:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"RACE\", \"SEX\", \"ARMCD\", \"ACTARMCD\")),             selected = \"ARMCD\",             multiple = TRUE,             fixed = FALSE,             label = \"Select variables:\"           )         ),         color_settings = TRUE,         color = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         fill = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         size = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         plot_height = c(600, 200, 2000),         ggtheme = \"gray\"       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-bivariate-plot.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to use bivariate plot with various datasets types","what":"Run the app","title":"Using bivariate plot","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-cross-table.html","id":"section-teal-application-to-use-cross-table-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"Teal application to use cross table with various datasets types","title":"Using cross table","text":"vignette guide 4 parts create teal application using various types datasets inside cross table module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-cross-table.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to use cross table with various datasets types","what":"Loading libraries","title":"Using cross table","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-cross-table.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to use cross table with various datasets types","what":"Create data sets","title":"Using cross table","text":"Inside app 5 datasets used ADSL wide data set subject data ADSL2 wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADSL2 <- synthetic_cdisc_data(\"latest\")$adsl %>% # nolint   mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1)) ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb %>% # nolint   mutate(CHGC = as.factor(case_when(     CHG < 1 ~ \"N\",     CHG > 1 ~ \"P\",     TRUE ~ \"-\"   )))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-cross-table.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to use cross table with various datasets types","what":"Create an app variable","title":"Using cross table","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_t_crosstable using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(       \"ADSL2\",       ADSL2,       keys = get_cdisc_keys(\"ADSL\"),       code = \"ADSL2 <- synthetic_cdisc_data(\\\"latest\\\")$adsl %>%               mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))\"     ),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     cdisc_dataset(\"ADLB\", ADLB,       code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb %>%             mutate(CHGC = as.factor(case_when(             CHG < 1 ~ 'N',             CHG > 1 ~ 'P',             TRUE ~ '-'             )))\"     ),     check = TRUE   ),   modules = modules(     modules(       label = \"Cross table\",       tm_t_crosstable(         label = \"Single wide dataset\",         x = data_extract_spec(           \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL),             selected = names(ADSL)[5],             multiple = TRUE,             fixed = FALSE,             ordered = TRUE           )         ),         y = data_extract_spec(           \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL),             selected = names(ADSL)[6],             multiple = FALSE,             fixed = FALSE           )         )       ),       tm_t_crosstable(         label = \"Same long datasets (different subsets)\",         x = data_extract_spec(           dataname = \"ADLB\",           filter = filter_spec(             vars = \"PARAMCD\",             choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),             selected = levels(ADLB$PARAMCD)[1],             multiple = FALSE           ),           select = select_spec(             choices = variable_choices(ADLB),             selected = \"AVISIT\",             multiple = TRUE,             fixed = FALSE,             ordered = TRUE,             label = \"Select variable:\"           )         ),         y = data_extract_spec(           dataname = \"ADLB\",           filter = filter_spec(             vars = \"PARAMCD\",             choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),             selected = levels(ADLB$PARAMCD)[1],             multiple = FALSE           ),           select = select_spec(             choices = variable_choices(ADLB),             selected = \"LOQFL\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         )       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-cross-table.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to use cross table with various datasets types","what":"Run the app","title":"Using cross table","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-outliers-module.html","id":"section-teal-application-to-analyse-and-report-outliers-with-various-datasets-types-","dir":"Articles","previous_headings":"","what":"Teal application to analyse and report outliers with various datasets types.","title":"Using outliers module","text":"vignette guide 4 parts create teal application using various types datasets inside outliers module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-outliers-module.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to analyse and report outliers with various datasets types.","what":"Loading libraries","title":"Using outliers module","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-outliers-module.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to analyse and report outliers with various datasets types.","what":"Create data sets","title":"Using outliers module","text":"Inside app 5 datasets used ADSL wide data set subject data ADRS long data set response data subjects different time points study ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb # nolint"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-outliers-module.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to analyse and report outliers with various datasets types.","what":"Create an app variable","title":"Using outliers module","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_outliers using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADLB\", ADLB, code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb\"),     check = TRUE   ),   modules = modules(     # tm_outliers ----     modules(       label = \"Outliers module\",       tm_outliers(         label = \"Single wide dataset\",         outlier_var = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),             selected = \"AGE\",             fixed = FALSE           )         ),         categorical_var = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL, subset = names(Filter(isTRUE, sapply(ADSL, is.factor)))),             selected = \"RACE\",             multiple = FALSE,             fixed = FALSE           )         )       ),       tm_outliers(         label = \"Wide and long datasets\",         outlier_var = list(           data_extract_spec(             dataname = \"ADSL\",             select = select_spec(               label = \"Select variable:\",               choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),               selected = \"AGE\",               fixed = FALSE             )           ),           data_extract_spec(             dataname = \"ADLB\",             select = select_spec(               label = \"Select variable:\",               choices = variable_choices(ADLB, c(\"AVAL\", \"CHG2\")),               selected = \"AVAL\",               multiple = FALSE,               fixed = FALSE             )           )         ),         categorical_var =           data_extract_spec(             dataname = \"ADSL\",             select = select_spec(               label = \"Select variables:\",               choices = variable_choices(ADSL, subset = names(Filter(isTRUE, sapply(ADSL, is.factor)))),               selected = \"RACE\",               multiple = FALSE,               fixed = FALSE             )           )       ),       tm_outliers(         label = \"Multiple long datasets\",         outlier_var = list(           data_extract_spec(             dataname = \"ADRS\",             select = select_spec(               label = \"Select variable:\",               choices = variable_choices(ADRS, c(\"ADY\", \"EOSDY\")),               selected = \"ADY\",               fixed = FALSE             )           ),           data_extract_spec(             dataname = \"ADLB\",             select = select_spec(               label = \"Select variable:\",               choices = variable_choices(ADLB, c(\"AVAL\", \"CHG2\")),               selected = \"AVAL\",               multiple = FALSE,               fixed = FALSE             )           )         ),         categorical_var = list(           data_extract_spec(             dataname = \"ADRS\",             select = select_spec(               label = \"Select variables:\",               choices = variable_choices(ADRS, c(\"ARM\", \"ACTARM\")),               selected = \"ARM\",               multiple = FALSE,               fixed = FALSE             )           ),           data_extract_spec(             dataname = \"ADLB\",             select = select_spec(               label = \"Select variables:\",               choices = variable_choices(ADLB, subset = names(Filter(isTRUE, sapply(ADLB, is.factor)))),               selected = \"RACE\",               multiple = FALSE,               fixed = FALSE             )           )         )       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-outliers-module.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to analyse and report outliers with various datasets types.","what":"Run the app","title":"Using outliers module","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-regression-plots.html","id":"section-teal-application-to-use-regression-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"Teal application to use regression plot with various datasets types","title":"Using regression plots","text":"vignette guide 4 parts create teal application using various types datasets inside regression plot module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-regression-plots.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to use regression plot with various datasets types","what":"Loading libraries","title":"Using regression plots","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-regression-plots.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to use regression plot with various datasets types","what":"Create data sets","title":"Using regression plots","text":"Inside app 5 datasets used ADSL wide data set subject data ADSL2 wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADSL2 <- synthetic_cdisc_data(\"latest\")$adsl %>% # nolint   mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1)) ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb %>% # nolint   mutate(CHGC = as.factor(case_when(     CHG < 1 ~ \"N\",     CHG > 1 ~ \"P\",     TRUE ~ \"-\"   )))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-regression-plots.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to use regression plot with various datasets types","what":"Create an app variable","title":"Using regression plots","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_a_regression using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADSL2\", ADSL2,       keys = get_cdisc_keys(\"ADSL\"),       code = \"ADSL2 <- synthetic_cdisc_data(\\\"latest\\\")$adsl %>%               mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))\"     ),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     cdisc_dataset(       \"ADLB\",       ADLB,       code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb %>%             mutate(CHGC = as.factor(case_when(             CHG < 1 ~ 'N',             CHG > 1 ~ 'P',             TRUE ~ '-'             )))\"     ),     check = TRUE   ),   modules = modules(     modules(       label = \"Regression plots\",       tm_a_regression(         label = \"Single wide dataset\",         response = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"BMRKR1\", \"BMRKR2\")),             selected = \"BMRKR1\",             multiple = FALSE,             fixed = FALSE           )         ),         regressor = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL, c(\"AGE\", \"SEX\", \"RACE\")),             selected = \"AGE\",             multiple = TRUE,             fixed = FALSE           )         )       ),       tm_a_regression(         label = \"Two wide datasets\",         default_plot_type = 2,         response = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"BMRKR1\", \"BMRKR2\")),             selected = \"BMRKR1\",             multiple = FALSE,             fixed = FALSE           )         ),         regressor = data_extract_spec(           dataname = \"ADSL2\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL2, c(\"AGE\", \"SEX\", \"RACE\")),             selected = c(\"AGE\", \"RACE\"),             multiple = TRUE,             fixed = FALSE           )         )       ),       tm_a_regression(         label = \"Same long datasets (same subset)\",         default_plot_type = 2,         response = data_extract_spec(           dataname = \"ADTTE\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADTTE, c(\"AVAL\", \"CNSR\")),             selected = \"AVAL\",             multiple = FALSE,             fixed = FALSE           ),           filter = filter_spec(             label = \"Select parameter:\",             vars = \"PARAMCD\",             choices = value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),             selected = \"PFS\",             multiple = FALSE           )         ),         regressor = data_extract_spec(           dataname = \"ADTTE\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADTTE, c(\"AGE\", \"CNSR\", \"SEX\")),             selected = c(\"AGE\", \"CNSR\", \"SEX\"),             multiple = TRUE           ),           filter = filter_spec(             label = \"Select parameter:\",             vars = \"PARAMCD\",             choices = value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),             selected = \"PFS\",             multiple = FALSE           )         )       ),       tm_a_regression(         label = \"Wide and long datasets\",         response = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[2],               multiple = TRUE,               label = \"Select measurement:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[2],               multiple = TRUE,               label = \"Select visit:\"             )           ),           select = select_spec(             label = \"Select variable:\",             choices = \"AVAL\",             selected = \"AVAL\",             multiple = FALSE,             fixed = TRUE           )         ),         regressor = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL, c(\"BMRKR1\", \"BMRKR2\", \"AGE\")),             selected = \"AGE\",             multiple = TRUE,             fixed = FALSE           )         )       ),       tm_a_regression(         label = \"Same long datasets (different subsets)\",         default_plot_type = 2,         response = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = TRUE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = TRUE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = \"AVAL\",             selected = \"AVAL\",             multiple = FALSE,             fixed = TRUE           )         ),         regressor = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select labs:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"AVAL\", \"AGE\", \"BMRKR1\", \"BMRKR2\", \"SEX\", \"ARM\")),             selected = c(\"AVAL\", \"BMRKR1\"),             multiple = TRUE           )         )       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-regression-plots.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to use regression plot with various datasets types","what":"Run the app","title":"Using regression plots","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-response-plot.html","id":"section-teal-application-to-use-response-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"Teal application to use response plot with various datasets types","title":"Using response plot","text":"vignette guide 4 parts create teal application using various types datasets inside response plot module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-response-plot.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to use response plot with various datasets types","what":"Loading libraries","title":"Using response plot","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-response-plot.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to use response plot with various datasets types","what":"Create data sets","title":"Using response plot","text":"Inside app 5 datasets used ADSL wide data set subject data ADSL2 wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADSL2 <- synthetic_cdisc_data(\"latest\")$adsl %>% # nolint   mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1)) ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb %>% # nolint   mutate(CHGC = as.factor(case_when(     CHG < 1 ~ \"N\",     CHG > 1 ~ \"P\",     TRUE ~ \"-\"   )))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-response-plot.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to use response plot with various datasets types","what":"Create an app variable","title":"Using response plot","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_g_response using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(       \"ADSL2\",       ADSL2,       keys = get_cdisc_keys(\"ADSL\"),       code = \"ADSL2 <- synthetic_cdisc_data(\\\"latest\\\")$adsl %>%               mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))\"     ),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     cdisc_dataset(       \"ADLB\",       ADLB,       code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb %>%             mutate(CHGC = as.factor(case_when(             CHG < 1 ~ 'N',             CHG > 1 ~ 'P',             TRUE ~ '-'             )))\"     ),     check = TRUE   ),   modules = modules(     modules(       label = \"Response plot\",       tm_g_response(         label = \"Single wide dataset\",         response = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),             selected = \"BMRKR2\",             multiple = FALSE,             fixed = FALSE           )         ),         x = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARMCD\", \"STRATA1\")),             selected = \"ARMCD\",             multiple = FALSE,             fixed = FALSE           )         )       ),       tm_g_response(         label = \"Two wide datasets\",         response = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),             selected = \"BMRKR2\",             multiple = FALSE           )         ),         x = data_extract_spec(           dataname = \"ADSL2\",           select = select_spec(             label = \"Select variable:\",             choices = c(\"SEX\", \"COUNTRY\", \"RACE\", \"STRATA1\", \"ARMCD\"),             selected = \"ARMCD\",             multiple = FALSE           )         )       ),       tm_g_response(         label = \"Multiple long datasets\",         response = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               label = \"Select parameter:\",               vars = \"PARAMCD\",               choices = levels(ADLB$PARAMCD),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE             ),             filter_spec(               label = \"Select visit:\",               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE             )           ),           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADLB, c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),             selected = \"BMRKR2\",             multiple = FALSE           )         ),         x = data_extract_spec(           dataname = \"ADRS\",           filter = list(             filter_spec(               label = \"Select parameter:\",               vars = \"PARAMCD\",               choices = levels(ADRS$PARAMCD),               selected = levels(ADRS$PARAMCD)[3],               multiple = FALSE             ),             filter_spec(               label = \"Select visit:\",               vars = \"AVISIT\",               choices = levels(ADRS$AVISIT),               selected = levels(ADRS$AVISIT)[3],               multiple = FALSE             )           ),           select = select_spec(             choices = c(\"AVALC\", \"ITTFL\", \"BEP01FL\"),             selected = \"AVALC\",             multiple = FALSE,             fixed = TRUE           )         ),         row_facet = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = \"SEX\",             selected = NULL,             multiple = FALSE           )         ),         col_facet = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"SEX\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE           )         )       ),       tm_g_response(         label = \"Wide and long dataset\",         response = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = levels(ADLB$PARAMCD),               selected = levels(ADLB$PARAMCD)[2],               multiple = TRUE,               label = \"Select measurement:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[2],               multiple = TRUE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"BMRKR2\", \"ITTFL\", \"BEP01FL\")),             selected = \"BMRKR2\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         x = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(ADSL, c(\"ARMCD\", \"BMRKR1\", \"BMRKR2\", \"BEP01FL\")),             selected = \"BMRKR2\",             multiple = FALSE,             fixed = FALSE           )         )       ),       tm_g_response(         label = \"Same long datasets\",         response = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"BMRKR2\", \"AVALC\", \"BEP01FL\")),             selected = \"AVALC\",             multiple = FALSE,             fixed = TRUE,             label = \"Select variable:\"           )         ),         x = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AVALC\", \"AGE\", \"SEX\", \"ARMCD\", \"STRATA1\")),             selected = \"ARMCD\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         row_facet = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = \"PARAMCD\",             selected = \"PARAMCD\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         col_facet = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = \"AVISIT\",             selected = \"AVISIT\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         )       ),       tm_g_response(         label = \"Same long datasets  (different subsets)\",         response = data_extract_spec(           dataname = \"ADLB\",           filter = filter_spec(             vars = \"PARAMCD\",             choices = levels(ADLB$PARAMCD),             selected = levels(ADLB$PARAMCD)[2],             multiple = FALSE,             label = \"Select lab:\"           ),           select = select_spec(             choices = \"BMRKR2\",             selected = \"BMRKR2\",             multiple = FALSE,             fixed = TRUE           )         ),         x = data_extract_spec(           dataname = \"ADLB\",           filter = filter_spec(             vars = \"PARAMCD\",             choices = levels(ADLB$PARAMCD),             selected = levels(ADLB$PARAMCD)[1],             multiple = FALSE,             label = \"Select lab:\"           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"AVISIT\", \"PARAMCD\", \"BEP01FL\")),             selected = \"AVISIT\",             multiple = FALSE,             fixed = TRUE           )         ),         row_facet = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = levels(ADLB$PARAMCD),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"SEX\", \"RACE\", \"ARMCD\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select Variable\"           )         ),         col_facet = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = levels(ADLB$PARAMCD),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"SEX\", \"RACE\", \"ARMCD\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         )       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-response-plot.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to use response plot with various datasets types","what":"Run the app","title":"Using response plot","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot-matrix.html","id":"section-teal-application-to-use-scatter-plot-matrix-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"Teal application to use scatter plot matrix with various datasets types","title":"Using scatterplot matrix","text":"vignette guide 4 parts create teal application using various types datasets inside scatter plot matrix module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot-matrix.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to use scatter plot matrix with various datasets types","what":"Loading libraries","title":"Using scatterplot matrix","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot-matrix.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to use scatter plot matrix with various datasets types","what":"Create data sets","title":"Using scatterplot matrix","text":"Inside app 5 datasets used ADSL wide data set subject data ADSL2 wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADSL2 <- synthetic_cdisc_data(\"latest\")$adsl %>% # nolint   mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1)) ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb %>% # nolint   mutate(CHGC = as.factor(case_when(     CHG < 1 ~ \"N\",     CHG > 1 ~ \"P\",     TRUE ~ \"-\"   )))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot-matrix.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to use scatter plot matrix with various datasets types","what":"Create an app variable","title":"Using scatterplot matrix","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_g_scatterplotmatrix using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(       \"ADSL2\",       ADSL2,       keys = get_cdisc_keys(\"ADSL\"),       code = \"ADSL2 <- synthetic_cdisc_data(\\\"latest\\\")$adsl %>%               mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))\"     ),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     cdisc_dataset(\"ADLB\", ADLB,       code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb %>%             mutate(CHGC = as.factor(case_when(             CHG < 1 ~ 'N',             CHG > 1 ~ 'P',             TRUE ~ '-'             )))\"     ),     check = TRUE   ),   modules = modules(     modules(       label = \"Scatterplot matrix\",       # .. single wide ----       tm_g_scatterplotmatrix(         label = \"Single wide dataset\",         variables = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL),             selected = c(\"AGE\", \"RACE\", \"SEX\", \"BMRKR1\", \"BMRKR2\"),             multiple = TRUE,             fixed = FALSE,             ordered = TRUE           )         )       ),       tm_g_scatterplotmatrix(         label = \"Multiple wide datasets\",         variables = list(           data_extract_spec(             dataname = \"ADSL\",             select = select_spec(               label = \"Select variables:\",               choices = variable_choices(ADSL),               selected = c(\"AGE\", \"ACTARM\", \"SEX\", \"BMRKR1\"),               multiple = TRUE,               fixed = FALSE,               ordered = TRUE             )           ),           data_extract_spec(             dataname = \"ADSL2\",             select = select_spec(               label = \"Select variables:\",               choices = variable_choices(ADSL2),               selected = c(\"COUNTRY\", \"ACTARM\", \"STRATA1\"),               multiple = TRUE,               fixed = FALSE,               ordered = TRUE             )           )         )       ),       tm_g_scatterplotmatrix(         \"One long dataset\",         variables = data_extract_spec(           dataname = \"ADTTE\",           select = select_spec(             choices = variable_choices(ADTTE, c(\"AVAL\", \"BMRKR1\", \"BMRKR2\")),             selected = c(\"AVAL\", \"BMRKR1\", \"BMRKR2\"),             multiple = TRUE,             fixed = FALSE,             ordered = TRUE,             label = \"Select variables:\"           )         )       ),       tm_g_scatterplotmatrix(         label = \"Two long datasets\",         variables = list(           data_extract_spec(             dataname = \"ADRS\",             select = select_spec(               label = \"Select variables:\",               choices = variable_choices(ADRS),               selected = c(\"AVAL\", \"AVALC\"),               multiple = TRUE,               fixed = FALSE,               ordered = TRUE,             ),             filter = filter_spec(               label = \"Select endpoints:\",               vars = c(\"PARAMCD\", \"AVISIT\"),               choices = value_choices(ADRS, c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),               selected = \"OVRINV - SCREENING\",               multiple = FALSE             )           ),           data_extract_spec(             dataname = \"ADTTE\",             select = select_spec(               label = \"Select variables:\",               choices = variable_choices(ADTTE),               selected = c(\"AVAL\", \"CNSR\"),               multiple = TRUE,               fixed = FALSE,               ordered = TRUE             ),             filter = filter_spec(               label = \"Select parameters:\",               vars = \"PARAMCD\",               choices = value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),               selected = \"OS\",               multiple = TRUE             )           )         )       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot-matrix.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to use scatter plot matrix with various datasets types","what":"Run the app","title":"Using scatterplot matrix","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot.html","id":"section-teal-application-to-use-scatter-plot-with-various-datasets-types","dir":"Articles","previous_headings":"","what":"Teal application to use scatter plot with various datasets types","title":"Using scatterplot","text":"vignette guide 4 parts create teal application using various types datasets inside scatter plot module: Load Libraries Create data sets Create app variable Run App","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot.html","id":"section-loading-libraries","dir":"Articles","previous_headings":"Teal application to use scatter plot with various datasets types","what":"Loading libraries","title":"Using scatterplot","text":"","code":"library(teal.modules.general) # used to create the app library(scda) # used to create data sets library(dplyr) # used to modify data sets"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot.html","id":"section-create-data-sets","dir":"Articles","previous_headings":"Teal application to use scatter plot with various datasets types","what":"Create data sets","title":"Using scatterplot","text":"Inside app 5 datasets used ADSL wide data set subject data ADSL2 wide data set subject data ADRS long data set response data subjects different time points study ADTTE long data set time event data ADLB long data set lab measurements subject","code":"ADSL <- synthetic_cdisc_data(\"latest\")$adsl # nolint ADSL2 <- synthetic_cdisc_data(\"latest\")$adsl %>% # nolint   mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1)) ADRS <- synthetic_cdisc_data(\"latest\")$adrs # nolint ADTTE <- synthetic_cdisc_data(\"latest\")$adtte # nolint ADLB <- synthetic_cdisc_data(\"latest\")$adlb %>% # nolint   mutate(CHGC = as.factor(case_when(     CHG < 1 ~ \"N\",     CHG > 1 ~ \"P\",     TRUE ~ \"-\"   )))"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot.html","id":"section-create-an-app-variable","dir":"Articles","previous_headings":"Teal application to use scatter plot with various datasets types","what":"Create an app variable","title":"Using scatterplot","text":"important section. use teal::init function create app. data handed using teal.data::cdisc_data. app constructed multiple calls tm_g_scatterplot using different combinations data sets.","code":"app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(       \"ADSL2\",       ADSL2,       keys = get_cdisc_keys(\"ADSL\"),       code = \"ADSL2 <- synthetic_cdisc_data(\\\"latest\\\")$adsl %>%               mutate(TRTDUR = round(as.numeric(TRTEDTM - TRTSDTM), 1))\"     ),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     cdisc_dataset(\"ADLB\", ADLB,       code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb %>%             mutate(CHGC = as.factor(case_when(             CHG < 1 ~ 'N',             CHG > 1 ~ 'P',             TRUE ~ '-'             )))\"     ),     check = TRUE   ),   modules = modules(     modules(       label = \"Scatterplot\",       tm_g_scatterplot(         label = \"Single wide dataset\",         x = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),             selected = \"AGE\",             multiple = FALSE,             fixed = FALSE           )         ),         y = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),             selected = \"BMRKR1\",             multiple = FALSE,             fixed = FALSE           )         ),         color_by = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL, c(\"RACE\", \"SEX\")),             selected = NULL,             multiple = TRUE,             fixed = FALSE           )         )       ),       # .. Two wide -----       tm_g_scatterplot(         label = \"Two wide datasets\",         x = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"BMRKR1\", \"BMRKR2\")),             selected = \"BMRKR1\",             multiple = FALSE,             fixed = FALSE           )         ),         y = data_extract_spec(           dataname = \"ADSL2\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL2, c(\"AGE\", \"SEX\")),             selected = \"AGE\",             multiple = FALSE,             fixed = FALSE           )         ),         color_by = data_extract_spec(           dataname = \"ADSL2\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL2, c(\"COUNTRY\", \"AGE\", \"RACE\")),             selected = \"COUNTRY\",             multiple = FALSE,             fixed = FALSE           )         )       ),       tm_g_scatterplot(         label = \"Different long datasets\",         x = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADRS),             selected = \"AVAL\",             multiple = FALSE,             fixed = FALSE           ),           filter = filter_spec(             label = \"Select endpoint:\",             vars = c(\"PARAMCD\", \"AVISIT\"),             choices = value_choices(ADRS, c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),             selected = \"OVRINV - SCREENING\",             multiple = FALSE           )         ),         y = data_extract_spec(           dataname = \"ADTTE\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADTTE),             selected = \"AVAL\",             multiple = FALSE,             fixed = FALSE           ),           filter = filter_spec(             label = \"Select parameters:\",             vars = c(\"PARAMCD\"),             choices = value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),             selected = \"OS\",             multiple = TRUE           )         ),         color_by = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"AGE\", \"SEX\")),             selected = \"AGE\",             multiple = FALSE,             fixed = FALSE           )         )       ),       tm_g_scatterplot(         label = \"Wide and long datasets\",         x = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"SEX\", \"AGE\", \"BMRKR1\", \"COUNTRY\")),             selected = \"AGE\",             multiple = FALSE,             fixed = FALSE           )         ),         y = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select measurement:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             label = \"Selected variable:\",             choices = \"AVAL\",             selected = \"AVAL\",             multiple = FALSE,             fixed = TRUE           )         ),         color_by = data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"SEX\", \"AGE\", \"RACE\", \"COUNTRY\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE           )         )       ),       tm_g_scatterplot(         label = \"Same long datasets (same subsets)\",         x = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AVAL\", \"BMRKR1\", \"BMRKR2\")),             selected = \"AVAL\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         y = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AVAL\", \"BMRKR1\", \"BMRKR2\")),             selected = \"BMRKR1\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         ),         color_by = data_extract_spec(           dataname = \"ADRS\",           select = select_spec(             choices = variable_choices(ADRS, c(\"AGE\", \"SEX\", \"RACE\")),             selected = NULL,             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         )       ),       tm_g_scatterplot(         label = \"Same long datasets (different subsets)\",         x = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = \"AVAL\",             selected = \"AVAL\",             multiple = FALSE,             fixed = TRUE           )         ),         y = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = \"AVAL\",             selected = \"AVAL\",             multiple = FALSE,             fixed = TRUE           )         ),         color_by = data_extract_spec(           dataname = \"ADLB\",           filter = list(             filter_spec(               vars = \"PARAMCD\",               choices = value_choices(ADLB, \"PARAMCD\", \"PARAM\"),               selected = levels(ADLB$PARAMCD)[1],               multiple = FALSE,               label = \"Select lab:\"             ),             filter_spec(               vars = \"AVISIT\",               choices = levels(ADLB$AVISIT),               selected = levels(ADLB$AVISIT)[1],               multiple = FALSE,               label = \"Select visit:\"             )           ),           select = select_spec(             choices = variable_choices(ADLB, c(\"RACE\", \"SEX\")),             selected = \"SEX\",             multiple = FALSE,             fixed = FALSE,             label = \"Select variable:\"           )         )       )     )   ) )"},{"path":"https://insightsengineering.github.io/teal.modules.general/articles/using-scatterplot.html","id":"section-run-the-app","dir":"Articles","previous_headings":"Teal application to use scatter plot with various datasets types","what":"Run the app","title":"Using scatterplot","text":"simple shiny::shinyApp call let run app. Note app displayed running code inside R session.","code":"shinyApp(app$ui, app$server, options = list(height = 1024, width = 1024))"},{"path":"https://insightsengineering.github.io/teal.modules.general/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Maciej Nasinski. Author. Konrad Pagacz. Author. Nikolas Burkoff. Author. Pawel Rucki. Author. Mahmoud Hallal. Author. F. Hoffmann-La Roche AG. Copyright holder, funder. Ondrej Slama. Contributor.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Nasinski M, Pagacz K, Burkoff N, Rucki P, Hallal M (2022). teal.modules.general: General modules add teal application. R package version 0.2.14.9000.","code":"@Manual{,   title = {teal.modules.general: General modules to add to a teal application},   author = {Dawid Kaledkowski and Maciej Nasinski and Konrad Pagacz and Nikolas Burkoff and Pawel Rucki and Mahmoud Hallal},   year = {2022},   note = {R package version 0.2.14.9000}, }"},{"path":"https://insightsengineering.github.io/teal.modules.general/index.html","id":"tealmodulesgeneral","dir":"","previous_headings":"","what":"General modules to add to a teal application","title":"General modules to add to a teal application","text":"package contains set standard teal modules include applications. include modules : viewing data (including tm_variable_browser, tm_data_table, tm_file_viewer, ‚Ä¶) visualizing data (tm_g_scatterplot, tm_g_association, ‚Ä¶) understanding missing outlier values within data (tm_missing_data, tm_outliers, ‚Ä¶) performing simple data analysis (tm_a_pca, tm_g_distribution, tm_a_regression, ‚Ä¶). modules work CDISC data, independent datasets general relational data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"General modules to add to a teal application","text":"recommended create use Github PAT install latest version package. PAT, run following: might need manually install package dependencies installing package without dependencies = FALSE argument install_github may produce error. order run many examples also need install scda package. See package vignettes browseVignettes(package = \"teal.modules.general\") usage package.","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"insightsengineering/teal.modules.general@*release\", dependencies = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.general/index.html","id":"acknowledgment","dir":"","previous_headings":"","what":"Acknowledgment","title":"General modules to add to a teal application","text":"package result joint efforts many developers stakeholders. like thank everyone contributed far!","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/add_facet_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add axis labels that show facetting variable ‚Äî add_facet_labels","title":"Add axis labels that show facetting variable ‚Äî add_facet_labels","text":"Add axis labels show facetting variable","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/add_facet_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add axis labels that show facetting variable ‚Äî add_facet_labels","text":"","code":"add_facet_labels(p, xfacet_label = NULL, yfacet_label = NULL)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/add_facet_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add axis labels that show facetting variable ‚Äî add_facet_labels","text":"p ggplot2 object add facet labels xfacet_label label facet along x axis (nothing created NULL), vector, concatenated \" & \" yfacet_label label facet along y axis (nothing created NULL), vector, concatenated \" & \"","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/add_facet_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add axis labels that show facetting variable ‚Äî add_facet_labels","text":"grid grob object (drawn grid.draw)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/add_facet_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add axis labels that show facetting variable ‚Äî add_facet_labels","text":"","code":"# we put donttest to avoid strictr error with seq along.with argument # \\donttest{ library(ggplot2) library(grid)  p <- ggplot(mtcars) +   aes(x = mpg, y = disp) +   geom_point() +   facet_grid(gear ~ cyl) p  xfacet_label <- \"cylinders\" yfacet_label <- \"gear\" res <- add_facet_labels(p, xfacet_label, yfacet_label) grid.newpage() grid.draw(res)   grid.newpage() grid.draw(add_facet_labels(p, xfacet_label = NULL, yfacet_label))  grid.newpage() grid.draw(add_facet_labels(p, xfacet_label, yfacet_label = NULL))  grid.newpage() grid.draw(add_facet_labels(p, xfacet_label = NULL, yfacet_label = NULL))  # }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/call_fun_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"Call function character vector ... argument","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/call_fun_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"","code":"call_fun_dots(fun, str_args)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/call_fun_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"fun (character) Name function ... argument shall replaced values str_args. str_args (character) character vector function shall executed ","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/call_fun_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":": call (.e. expression) function provided funwith arguments provided str_args.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/call_fun_dots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call a function with a character vector for the ... argument ‚Äî call_fun_dots","text":"","code":"if (FALSE) { a <- 1 b <- 2 call_fun_dots(\"sum\", c(\"a\", \"b\")) eval(call_fun_dots(\"sum\", c(\"a\", \"b\"))) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/create_sparklines.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"Generates sparkline HTML code corresponding input array. numeric variables creates box plot, character factors - bar plot. Produces empty string variables types. Coerces character vector factor delegates create_sparklines.factor Coerces logical vector factor delegates create_sparklines.factor","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/create_sparklines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"","code":"create_sparklines(arr, width = 150, ...)  # S3 method for default create_sparklines(arr, width = 150, ...)  # S3 method for Date create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # S3 method for POSIXct create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # S3 method for POSIXlt create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # S3 method for character create_sparklines(arr, ...)  # S3 method for logical create_sparklines(arr, ...)  # S3 method for factor create_sparklines(arr, width = 150, bar_spacing = 5, bar_width = 20, ...)  # S3 method for numeric create_sparklines(arr, width = 150, ...)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/create_sparklines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"arr vector type length width numeric width sparkline widget (pixels) ... list additional options passed bar plots jquery.sparkline;  see jquery.sparkline docs bar_spacing numeric spacing bars (pixels) bar_width numeric width bars (pixels)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/create_sparklines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 generic for sparkline widget HTML ‚Äî create_sparklines","text":"character variable containing HTML code sparkline HTML widget character HTML code sparkline widget character HTML code sparkline widget character HTML code sparkline widget character HTML code sparkline widget character HTML code sparkline widget character HTML code sparkline widget character HTML code sparkline widget","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/establish_updating_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"created observers update column currently selected left-hand side tabset panel.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/establish_updating_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"","code":"establish_updating_selection(datanames, input, plot_var, columns_names)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/establish_updating_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"datanames (character) name dataset input (session$input) shiny session input plot_var (list) list containing currently selected dataset (tab) column names columns_names (environment) environment containing bindings dataset","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/establish_updating_selection.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Creates observers updating the currently selected column ‚Äî establish_updating_selection","text":"Creates observer dataset (tab tabset panel).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/extract_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract html id for data_extract_ui ‚Äî extract_input","title":"Extract html id for data_extract_ui ‚Äî extract_input","text":"data_extract_ui located extended html id. use ns(\"original id\") reference, extended specific suffixes.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/extract_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract html id for data_extract_ui ‚Äî extract_input","text":"","code":"extract_input(varname, dataname, filter = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/extract_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract html id for data_extract_ui ‚Äî extract_input","text":"varname character original html id. mostly retrieved ns(\"original id\") ui session$ns(\"original id\") server function. dataname character dataname data_extract input. might retrieved like data_extract_spec(...)[[1]]$dataname. filter logical connected extract_data_spec used filter option.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_datanames_selected.html","id":null,"dir":"Reference","previous_headings":"","what":"a tool for ui and server for getting datanames taking into account the datasets_selected vector ‚Äî get_datanames_selected","title":"a tool for ui and server for getting datanames taking into account the datasets_selected vector ‚Äî get_datanames_selected","text":"tool ui server getting datanames taking account datasets_selected vector","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_datanames_selected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a tool for ui and server for getting datanames taking into account the datasets_selected vector ‚Äî get_datanames_selected","text":"","code":"get_datanames_selected(datasets, datasets_selected)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_datanames_selected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a tool for ui and server for getting datanames taking into account the datasets_selected vector ‚Äî get_datanames_selected","text":"datasets teal datasets object datasets_selected (character) character vector says datasets shown order. Names vector correspond datasets names.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_datanames_selected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"a tool for ui and server for getting datanames taking into account the datasets_selected vector ‚Äî get_datanames_selected","text":"(character) character vector","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_scatterplotmatrix_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"uses stats::cor.test per default numerical input variables converts results character vector. extended different stats different variable types needed. Meant called lattice::panel.text.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_scatterplotmatrix_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"","code":"get_scatterplotmatrix_stats(   x,   y,   .f = stats::cor.test,   .f_args = list(),   round_stat = 2,   round_pval = 4 )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_scatterplotmatrix_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"x numeric y numeric .f function, function accepts x y formula input ~ x + y. Default stats::cor.test .f_args list arguments passed .f round_stat integer round_pval integer","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_scatterplotmatrix_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"character stats. stats::cor.test correlation coefficient p-value.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_scatterplotmatrix_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"presently need use formula input stats::cor.test na.fail gets evaluated formula passed (see ).","code":"x = c(1,3,5,7,NA) y = c(3,6,7,8,1) stats::cor.test(x, y, na.action = \"na.fail\") stats::cor.test(~ x + y,  na.action = \"na.fail\")"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_scatterplotmatrix_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get stats for x-y pairs in scatterplot matrix ‚Äî get_scatterplotmatrix_stats","text":"","code":"set.seed(1) x <- runif(25, 0, 1) y <- runif(25, 0, 1) x[c(3, 10, 18)] <- NA  get_scatterplotmatrix_stats(x, y, .f = stats::cor.test, .f_args = list(method = \"pearson\")) #> [1] \"cor:0.11\\nP:0.6255\" get_scatterplotmatrix_stats(x, y, .f = stats::cor.test, .f_args = list(   method = \"pearson\",   na.action = na.fail )) #> [1] \"NA\""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_var_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a short variable description. ‚Äî get_var_description","title":"Returns a short variable description. ‚Äî get_var_description","text":"format variable description : \"<Long variable label> [<dataset name>.<variable name>]\" Example: \"Study Identifier [ADSL.STUDYID]\"","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_var_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a short variable description. ‚Äî get_var_description","text":"","code":"get_var_description(datasets, dataset_name, var_name)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/get_var_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a short variable description. ‚Äî get_var_description","text":"datasets (FilteredData) object containing dataset dataset_name (character) name dataset containing variable var_name (character) name variable","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/plot_var_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot variable ‚Äî plot_var_summary","title":"Plot variable ‚Äî plot_var_summary","text":"Creates summary plot statistics relevant data type.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/plot_var_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot variable ‚Äî plot_var_summary","text":"","code":"plot_var_summary(   var,   var_lab,   numeric_as_factor,   display_density = is.numeric(var),   remove_NA_hist = FALSE,   outlier_definition,   records_for_factor,   ggplot2_args )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/plot_var_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot variable ‚Äî plot_var_summary","text":"var vector type plotted. numeric variables produces histogram density line, factors creates frequency plot var_lab text describing selected variable displayed plot numeric_as_factor logical numeric variable treated factor display_density logical density estimation displayed numeric values? remove_NA_hist logical NA values removed histogram factor like variables. outlier_definition 0 outliers removed, otherwise outliers (outlier_definition*IQR /Q1/Q3 removed) records_for_factor numeric number factor levels >= value graph factors shown, list values. ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\")","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/plot_var_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot variable ‚Äî plot_var_summary","text":"plot","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/remove_outliers_from.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes the outlier observation from an array ‚Äî remove_outliers_from","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"Removes outlier observation array","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/remove_outliers_from.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"","code":"remove_outliers_from(var, outlier_definition)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/remove_outliers_from.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"var (numeric) numeric vector outlier_definition (numeric) 0 outliers removed, otherwise outliers (outlier_definition*IQR /Q1/Q3) removed","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/remove_outliers_from.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes the outlier observation from an array ‚Äî remove_outliers_from","text":"(numeric) vector without outlier values","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_single_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","title":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","text":"Renders single tab left-hand side tabset panel. rendered tab contains information one dataset many presented module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_single_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","text":"","code":"render_single_tab(   dataset_name,   output,   datasets,   input,   columns_names,   plot_var )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_single_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders a single tab in the left-hand side tabset panel ‚Äî render_single_tab","text":"dataset_name (character) name dataset contained rendered tab output (session$output) shiny session output datasets (FilteredData) object containing datasets input (session$input) shiny session input columns_names (environment) environment containing bindings dataset plot_var (list) list containing currently selected dataset (tab) column names","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tab_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","title":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","text":"Renders text headlining single tab left-hand side tabset panel","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tab_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","text":"","code":"render_tab_header(dataset_name, output, datasets)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tab_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders the text headlining a single tab in the left-hand side tabset panel ‚Äî render_tab_header","text":"dataset_name (character) name dataset tab output (session$output) shiny session output datasets (FilteredData) object containing datasets","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tab_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","title":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","text":"table contains column names, column labels, small summary NA values sparkline (appropriate).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tab_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","text":"","code":"render_tab_table(dataset_name, output, datasets, input, columns_names)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tab_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders the table for a single dataset in the left-hand side tabset panel ‚Äî render_tab_table","text":"dataset_name (character) name dataset output (session$output) shiny session output datasets (FilteredData) object containing datasets input (session$input) shiny session input columns_names (environment) environment containing bindings dataset","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tabset_panel_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","title":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","text":"Renders left-hand side tabset panel module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tabset_panel_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","text":"","code":"render_tabset_panel_content(   datanames,   output,   datasets,   input,   columns_names,   plot_var )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/render_tabset_panel_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renders the left-hand side tabset panel of the module ‚Äî render_tabset_panel_content","text":"datanames (character) name dataset output (session$output) shiny session output datasets (FilteredData) object containing datasets input (session$input) shiny session input columns_names (environment) environment containing bindings dataset plot_var (list) list containing currently selected dataset (tab) column names","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/shared_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Shared Parameters ‚Äî shared_params","title":"Shared Parameters ‚Äî shared_params","text":"Contains arguments shared multiple functions package avoid repetition using inheritParams.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/shared_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shared Parameters ‚Äî shared_params","text":"plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. rotate_xaxis_labels optional, (logical) Whether rotate plot X axis labels. rotate default (FALSE). ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") basic_table_args (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged options variable teal.basic_table_args default module setup. details see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\") pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/teal.modules.general.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.modules.general: General modules to add to a teal application ‚Äî teal.modules.general","title":"teal.modules.general: General modules to add to a teal application ‚Äî teal.modules.general","text":"modules package generic modules work data set (necessarily clinical trials data).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal component analysis module ‚Äî tm_a_pca","title":"Principal component analysis module ‚Äî tm_a_pca","text":"Principal component analysis module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal component analysis module ‚Äî tm_a_pca","text":"","code":"tm_a_pca(   label = \"Principal Component Analysis\",   dat,   plot_height = c(600, 200, 2000),   plot_width = NULL,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\",     \"test\"),   ggplot2_args = teal.widgets::ggplot2_args(),   rotate_xaxis_labels = FALSE,   font_size = c(12, 8, 20),   alpha = c(1, 0, 1),   size = c(2, 1, 8),   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal component analysis module ‚Äî tm_a_pca","text":"label (character) Label shown navigation item module. dat (data_extract_spec list multiple data_extract_spec) Datasets used compute PCA. plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Elbow plot\", \"Circle plot\", \"Biplot\", \"Eigenvector plot\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). rotate_xaxis_labels optional, (logical) Whether rotate plot X axis labels. rotate default (FALSE). font_size optional, (numeric) font size control title, x-axis label, y-axis label legend. scalar font size fixed size. slider presented adjust plot point sizes dynamically can vector length three c(value, min, max). alpha optional, (numeric) scalar plot points fixed opacity. slider presented adjust plot point opacity dynamically can vector length three c(value, min, max). size optional, (numeric) scalar plot point sizes fixed size. slider presented adjust plot point sizes dynamically can vector length three c(value, min, max). pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal component analysis module ‚Äî tm_a_pca","text":"","code":"# ADSL example  library(scda) #>  ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- teal::init(   data = cdisc_data(cdisc_dataset(     \"ADSL\", ADSL,     code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"   ),   check = TRUE   ),   modules = modules(     tm_a_pca(       \"PCA\",       data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(data = ADSL, c(\"BMRKR1\", \"AGE\", \"EOSDY\")),           selected = c(\"BMRKR1\", \"AGE\"),           multiple = TRUE         ),         filter = NULL       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by PCA Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:07.4991 pid:1110 token:[] teal.modules.general Initializing tm_a_pca if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot and Regression Model ‚Äî tm_a_regression","title":"Scatterplot and Regression Model ‚Äî tm_a_regression","text":"Scatterplot Regression Model","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot and Regression Model ‚Äî tm_a_regression","text":"","code":"tm_a_regression(   label = \"Regression Analysis\",   regressor,   response,   plot_height = c(600, 200, 2000),   plot_width = NULL,   alpha = c(1, 0, 1),   size = c(2, 1, 8),   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\",     \"test\"),   ggplot2_args = teal.widgets::ggplot2_args(),   pre_output = NULL,   post_output = NULL,   default_plot_type = 1,   default_outlier_label = \"USUBJID\" )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot and Regression Model ‚Äî tm_a_regression","text":"label (character) Label shown navigation item module. regressor (data_extract_spec list multiple data_extract_spec) Regressor variables incoming dataset filtering selecting. response (data_extract_spec list multiple data_extract_spec) Response variables incoming dataset filtering selecting. plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. alpha optional, (numeric) scalar plot points fixed opacity. slider presented adjust plot point opacity dynamically can vector length three c(value, min, max). size optional, (numeric) scalar plot point sizes fixed size slider presented adjust plot point sizes dynamically can vector length three c(value, min, max). ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Response vs Regressor\", \"Residuals vs Fitted\", \"Scale-Location\", \"Cook's distance\", \"Residuals vs Leverage\"\", \"Cook's dist vs Leverage\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful. default_plot_type optional, (numeric) Defaults Response vs Regressor. Response vs Regressor Residuals vs Fitted Normal Q-Q Scale-Location Cook's distance Residuals vs Leverage Cook's dist vs Leverage default_outlier_label optional, (character) default column selected label outliers.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_regression.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Scatterplot and Regression Model ‚Äî tm_a_regression","text":"examples, please see vignette \"Using regression plots\" via vignette(\"using-regression-plots\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_a_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot and Regression Model ‚Äî tm_a_regression","text":"","code":"# Regression graphs from selected response variable (BMRKR1) and # selected regressors (AGE) library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_a_regression(       label = \"Regression\",       response = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = \"BMRKR1\",           selected = \"BMRKR1\",           multiple = FALSE,           fixed = TRUE         )       ),       regressor = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variables:\",           choices = variable_choices(ADSL, c(\"AGE\", \"SEX\", \"RACE\")),           selected = \"AGE\",           multiple = TRUE,           fixed = FALSE         )       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Regression Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:09.7748 pid:1110 token:[] teal.modules.general Initializing tm_a_regression if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_data_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Table Viewer Teal Module ‚Äî tm_data_table","title":"Data Table Viewer Teal Module ‚Äî tm_data_table","text":"data table viewer shows data using paginated table.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_data_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Table Viewer Teal Module ‚Äî tm_data_table","text":"","code":"tm_data_table(   label = \"Data Table\",   variables_selected = list(),   datasets_selected = character(0),   dt_args = list(),   dt_options = list(searching = FALSE, pageLength = 30, lengthMenu = c(5, 15, 30, 100),     scrollX = TRUE),   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_data_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Table Viewer Teal Module ‚Äî tm_data_table","text":"label (character) Label shown navigation item module. variables_selected (list) named list character vectors variables (.e. columns) initially shown dataset. Names list elements correspond names datasets available app. entry specified dataset, first six variables dataset initially shown. datasets_selected (character) vector datasets shown order. Names vector correspond datasets names. vector length zero (default) datasets shown. dt_args (named list) Additional arguments passed DT::datatable (must include data options). dt_options (named list) options argument DT::datatable. default list(searching = FALSE, pageLength = 30, lengthMenu = c(5, 15, 30, 100), scrollX = TRUE) pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_data_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Table Viewer Teal Module ‚Äî tm_data_table","text":"DT package option DT.TOJSON_ARGS show Inf NA data tables. something require set options(DT.TOJSON_ARGS =  list(na = \"string\")) running module. Note though sorting numeric columns NA/Inf lexicographic numerical.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_data_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Table Viewer Teal Module ‚Äî tm_data_table","text":"","code":"library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_data_table(       variables_selected = list(ADSL = c(\"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\", \"AGE\", \"SEX\")),       dt_args = list(caption = \"ADSL Table Caption\")     )   ) ) #> [INFO] 2022-06-14 17:42:11.9762 pid:1110 token:[] teal.modules.general Initializing tm_data_table if (FALSE) { shinyApp(app$ui, app$server) }  # two-datasets example library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADTTE <- synthetic_cdisc_data(\"latest\")$adtte  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     check = TRUE   ),   modules = modules(     tm_data_table(       variables_selected = list(         ADSL = c(\"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\", \"AGE\", \"SEX\"),         ADTTE = c(           \"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\",           \"PARAM\", \"PARAMCD\", \"ARM\", \"ARMCD\", \"AVAL\", \"CNSR\"         )       )     )   ) ) #> [INFO] 2022-06-14 17:42:15.4503 pid:1110 token:[] teal.modules.general Initializing tm_data_table if (FALSE) { shinyApp(app$ui, app$server) }  # datasets: subsetting or changing order of datasets inside tm_data_table library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADLB <- synthetic_cdisc_data(\"latest\")$adlb ADTTE <- synthetic_cdisc_data(\"latest\")$adtte  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADLB\", ADLB, code = \"ADLB <- synthetic_cdisc_data(\\\"latest\\\")$adlb\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     check = TRUE   ),   modules = modules(     tm_data_table(       variables_selected = list(         ADSL = c(\"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\", \"AGE\", \"SEX\"),         ADLB = c(           \"STUDYID\", \"USUBJID\", \"SUBJID\", \"SITEID\",           \"PARAM\", \"PARAMCD\", \"AVISIT\", \"AVISITN\", \"AVAL\", \"CHG\"         )       ),       datasets_selected = c(\"ADTTE\", \"ADLB\", \"ADSL\")     )   ) ) #> [INFO] 2022-06-14 17:42:20.7656 pid:1110 token:[] teal.modules.general Initializing tm_data_table if (FALSE) { shinyApp(app$ui, app$server) }  # advanced usage of DT options and extensions library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADTTE <- synthetic_cdisc_data(\"latest\")$adtte  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     check = TRUE   ),   modules = modules(     tm_data_table(       dt_args = list(extensions = c(\"Buttons\", \"ColReorder\", \"FixedHeader\")),       dt_options = list(         searching = FALSE,         pageLength = 30,         lengthMenu = c(5, 15, 25, 50, 100),         scrollX = FALSE,         dom = \"lBrtip\",         buttons = c(\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"),         colReorder = TRUE,         fixedHeader = TRUE       )     )   ) ) #> [INFO] 2022-06-14 17:42:24.2636 pid:1110 token:[] teal.modules.general Initializing tm_data_table if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_file_viewer.html","id":null,"dir":"Reference","previous_headings":"","what":"File Viewer Teal Module ‚Äî tm_file_viewer","title":"File Viewer Teal Module ‚Äî tm_file_viewer","text":"file viewer module provides tool view static files. Supported formats include text formats, PDF, PNG, APNG, JPEG, SVG, WEBP, GIF BMP.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_file_viewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File Viewer Teal Module ‚Äî tm_file_viewer","text":"","code":"tm_file_viewer(   label = \"File Viewer Module\",   input_path = list(`Current Working Directory` = \".\") )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_file_viewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File Viewer Teal Module ‚Äî tm_file_viewer","text":"label (character) Label shown navigation item module. input_path optional, (list) input paths either: specific files accepted formats, directory URL. paths can specified absolute paths relative running directory application. default current working directory supplied.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_file_viewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File Viewer Teal Module ‚Äî tm_file_viewer","text":"","code":"data <- data.frame(1) app <- init(   data = teal_data(     dataset(\"data\", data)   ),   modules = modules(     tm_file_viewer(       input_path = list(         folder = system.file(\"sample_files\", package = \"teal.modules.general\"),         png = system.file(\"sample_files/sample_file.png\", package = \"teal.modules.general\"),         txt = system.file(\"sample_files/sample_file.txt\", package = \"teal.modules.general\"),         url = \"https://www.fda.gov/files/drugs/published/Portable-Document-Format-Specifications.pdf\"       )     )   ) ) #> [INFO] 2022-06-14 17:42:25.1025 pid:1110 token:[] teal.modules.general Initializing tm_file_viewer if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_front_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Front page module ‚Äî tm_front_page","title":"Front page module ‚Äî tm_front_page","text":"teal module creates simple front page teal applications","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_front_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Front page module ‚Äî tm_front_page","text":"","code":"tm_front_page(   label = \"Front page\",   header_text = character(0),   tables = list(),   additional_tags = tagList(),   footnotes = character(0),   show_metadata = FALSE )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_front_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Front page module ‚Äî tm_front_page","text":"label (character) Label shown navigation item module. header_text character vector text shown top module, element, named name shown first bold header followed value. first element's header displayed larger others tables named list dataframes tables shown module additional_tags shiny.tag.list html additional shiny tags html included table, example include image, tagList(tags$img(src = \"image.png\")) include html, HTML(\"html text \") footnotes character vector text shown bottom module, element, named name shown first bold, followed value show_metadata logical metadata datasets available module?","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_front_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Front page module ‚Äî tm_front_page","text":"teal module used teal applications","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_front_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Front page module ‚Äî tm_front_page","text":"","code":"library(scda)  table_1 <- data.frame(Info = c(\"A\", \"B\"), Text = c(\"A\", \"B\")) table_2 <- data.frame(`Column 1` = c(\"C\", \"D\"), `Column 2` = c(5.5, 6.6), `Column 3` = c(\"A\", \"B\")) table_3 <- data.frame(Info = c(\"E\", \"F\"), Text = c(\"G\", \"H\"))  table_input <- list(   \"Table 1\" = table_1,   \"Table 2\" = table_2,   \"Table 3\" = table_3 )  ADSL <- synthetic_cdisc_data(\"latest\")$adsl app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\",       metadata = list(\"Author\" = \"NEST team\", \"data_source\" = \"synthetic data\")     ),     check = TRUE   ),   modules = modules(     tm_front_page(       header_text = c(\"Important information\" = \"It can go here.\", \"Other information\" = \"Can go here.\"),       tables = table_input,       additional_tags = HTML(\"Additional HTML or shiny tags go here <br>\"),       footnotes = c(\"X\" = \"is the first footnote\", \"Y is the second footnote\"),       show_metadata = TRUE     )   ),   header = tags$h1(\"Sample Application\"),   footer = tags$p(\"Application footer\"), ) #> [INFO] 2022-06-14 17:42:27.4856 pid:1110 token:[] teal.modules.general Initializing tm_front_page if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_association.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack Plots of variables and show association with reference variable ‚Äî tm_g_association","title":"Stack Plots of variables and show association with reference variable ‚Äî tm_g_association","text":"Stack Plots variables show association reference variable","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack Plots of variables and show association with reference variable ‚Äî tm_g_association","text":"","code":"tm_g_association(   label = \"Association\",   ref,   vars,   show_association = TRUE,   plot_height = c(600, 400, 5000),   plot_width = NULL,   distribution_theme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\",     \"classic\", \"void\", \"test\"),   association_theme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\",     \"classic\", \"void\", \"test\"),   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack Plots of variables and show association with reference variable ‚Äî tm_g_association","text":"label (character) Label shown navigation item module. ref (data_extract_spec list multiple data_extract_spec) reference variable, must set multiple = FALSE. vars (data_extract_spec list multiple data_extract_spec) associated variables. show_association optional, (logical) Whether show association vars reference variable. Defaults TRUE. plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. distribution_theme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". association_theme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Bivariate1\", \"Bivariate2\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_association.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Stack Plots of variables and show association with reference variable ‚Äî tm_g_association","text":"examples, please see vignette \"Using association plot\" via vignette(\"using-association-plot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack Plots of variables and show association with reference variable ‚Äî tm_g_association","text":"","code":"# Association plot of selected reference variable (SEX) # against other selected variables (BMRKR1) library(scda) ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_g_association(       ref = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(             ADSL,             c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"STRATA1\", \"STRATA2\", \"ITTFL\", \"BMRKR2\")           ),           selected = \"RACE\",           fixed = FALSE         )       ),       vars = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variables:\",           choices = variable_choices(             ADSL,             c(\"SEX\", \"RACE\", \"COUNTRY\", \"ARM\", \"STRATA1\", \"STRATA2\", \"ITTFL\", \"BMRKR2\")           ),           selected = \"BMRKR2\",           multiple = TRUE,           fixed = FALSE         )       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Association Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:29.5656 pid:1110 token:[] teal.modules.general Initializing tm_g_association if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate and bivariate visualizations ‚Äî tm_g_bivariate","title":"Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"Univariate bivariate visualizations","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"","code":"tm_g_bivariate(   label = \"Bivariate Plots\",   x,   y,   row_facet = NULL,   col_facet = NULL,   facet = !is.null(row_facet) || !is.null(col_facet),   color = NULL,   fill = NULL,   size = NULL,   use_density = FALSE,   color_settings = FALSE,   free_x_scales = FALSE,   free_y_scales = FALSE,   plot_height = c(600, 200, 2000),   plot_width = NULL,   rotate_xaxis_labels = FALSE,   swap_axes = FALSE,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\",     \"test\"),   ggplot2_args = teal.widgets::ggplot2_args(),   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"label (character) Label shown navigation item module. x (data_extract_spec list multiple data_extract_spec) Variable names selected plot along x-axis default. Variable can numeric, factor character. empty selections allowed! y (data_extract_spec list multiple data_extract_spec) Variable names selected plot along y-axis default. Variable can numeric, factor character. row_facet optional, (data_extract_spec list multiple data_extract_spec) Variables row facetting. col_facet optional, (data_extract_spec list multiple data_extract_spec) Variables col facetting. facet optional, (logical) specify whether facet encodings ui elements toggled shown user default. Defaults TRUE either row_facet column_facet supplied. color optional, (data_extract_spec list multiple data_extract_spec) Variables selected outline color inside coloring settings. applied color_settings set TRUE. fill optional, (data_extract_spec list multiple data_extract_spec) Variables selected fill color inside coloring settings. applied color_settings set TRUE. size optional, (data_extract_spec list multiple data_extract_spec) Variables selected size geom_point plots inside coloring settings. applied color_settings set TRUE. use_density optional, (logical) value whether density (TRUE) plotted frequency (FALSE). Defaults frequency (FALSE). color_settings (logical) Whether coloring, filling size applied UI tool offered user. free_x_scales optional, (logical) Whether X scaling shall changeable. allow scaling changed default (FALSE). free_y_scales optional, (logical) Whether Y scaling shall changeable. allow scaling changed default (FALSE). plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. rotate_xaxis_labels optional, (logical) Whether rotate plot X axis labels. rotate default (FALSE). swap_axes optional, (logical) Whether swap X Y axes. Defaults FALSE. ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"general module visualize 1 & 2 dimensional data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_bivariate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"examples, please see vignette \"Using bivariate plot\" via vignette(\"using-bivariate-plot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate and bivariate visualizations ‚Äî tm_g_bivariate","text":"","code":"# Bivariate plot of selected variable (AGE) against selected (SEX) library(scda) ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_g_bivariate(       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL),           selected = \"AGE\",           fixed = FALSE         )       ),       y = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL),           selected = \"SEX\",           multiple = FALSE,           fixed = FALSE         )       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Bivariate Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:31.7855 pid:1110 token:[] teal.modules.general Initializing tm_g_bivariate if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Module ‚Äî tm_g_distribution","title":"Distribution Module ‚Äî tm_g_distribution","text":"Distribution Module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Module ‚Äî tm_g_distribution","text":"","code":"tm_g_distribution(   label = \"Distribution Module\",   dist_var,   strata_var = NULL,   group_var = NULL,   freq = FALSE,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\",     \"test\"),   ggplot2_args = teal.widgets::ggplot2_args(),   bins = c(30L, 1L, 100L),   plot_height = c(600, 200, 2000),   plot_width = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Module ‚Äî tm_g_distribution","text":"label (character) Label shown navigation item module. dist_var (data_extract_spec list multiple data_extract_spec) Variable consider distribution analysis. strata_var (data_extract_spec list multiple data_extract_spec) Categorical variable split selected distribution variable . group_var optional, (data_extract_spec list multiple data_extract_spec) data columns use faceting rows. freq optional, (logical) Whether display frequency (TRUE) density (FALSE). Defaults density (FALSE). ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Histogram\", \"QQplot\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). bins optional, (integer(1) integer(3)) scalar histogram bins fixed size. slider presented adjust number histogram bins dynamically can vector length three c(value, min, max). Defaults c(30L, 1L, 100L). plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distribution Module ‚Äî tm_g_distribution","text":"Module analyze explore univariate variable distribution","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution Module ‚Äî tm_g_distribution","text":"","code":"# Example with non-clinical data app <- init(   data = teal_data(dataset(\"iris\", iris)),   modules = list(     tm_g_distribution(       dist_var = data_extract_spec(         dataname = \"iris\",         select = select_spec(variable_choices(\"iris\"), \"Petal.Length\")       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Distribution Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:32.1896 pid:1110 token:[] teal.modules.general Initializing tm_g_distribution if (FALSE) { shinyApp(app$ui, app$server) }  # Example with clinical data library(scda) ADSL <- synthetic_cdisc_data(\"latest\")$adsl  vars1 <- choices_selected(variable_choices(ADSL, c(\"ARM\", \"COUNTRY\", \"SEX\")), selected = NULL)  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL),     code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\",     check = FALSE   ),   modules = modules(     tm_g_distribution(       dist_var = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),           selected = \"BMRKR1\",           multiple = FALSE,           fixed = FALSE         )       ),       strata_var = data_extract_spec(         dataname = \"ADSL\",         filter = filter_spec(           vars = vars1,           multiple = TRUE         )       ),       group_var = data_extract_spec(         dataname = \"ADSL\",         filter = filter_spec(           vars = vars1,           multiple = TRUE         )       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Distribution Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:33.2233 pid:1110 token:[] teal.modules.general Initializing tm_g_distribution if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Response Plots ‚Äî tm_g_response","title":"Response Plots ‚Äî tm_g_response","text":"Response Plots","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Response Plots ‚Äî tm_g_response","text":"","code":"tm_g_response(   label = \"Response Plot\",   response,   x,   row_facet = NULL,   col_facet = NULL,   coord_flip = FALSE,   count_labels = TRUE,   rotate_xaxis_labels = FALSE,   freq = FALSE,   plot_height = c(600, 400, 5000),   plot_width = NULL,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\",     \"test\"),   ggplot2_args = teal.widgets::ggplot2_args(),   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Response Plots ‚Äî tm_g_response","text":"label (character) Label shown navigation item module. response (data_extract_spec list multiple data_extract_spec) variable use response. can define one fixed column using setting fixed = TRUE inside select_spec. data_extract_spec must allow multiple selection case. x (data_extract_spec list multiple data_extract_spec) variable use X-axis response plot. Allow user select multiple columns data allowed teal. data_extract_spec must allow multiple selection case. row_facet optional, (data_extract_spec list multiple data_extract_spec) data columns use faceting rows. col_facet optional, (data_extract_spec list multiple data_extract_spec) data use faceting columns. coord_flip optional, (logical) Whether flip coordinates x response. count_labels optional, (logical) Whether show count labels. Defaults TRUE. rotate_xaxis_labels optional, (logical) Whether rotate plot X axis labels. rotate default (FALSE). freq optional, (logical) Whether display frequency (TRUE) density (FALSE). Defaults density (FALSE). plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\") pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_response.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Response Plots ‚Äî tm_g_response","text":"examples, please see vignette \"Using response plot\" via vignette(\"using-response-plot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Response Plots ‚Äî tm_g_response","text":"","code":"# Response plot with selected response (BMRKR1) and selected x variable (RACE) library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_g_response(       label = \"Response Plots\",       response = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"BMRKR2\", \"COUNTRY\")),           selected = \"BMRKR2\",           multiple = FALSE,           fixed = FALSE         )       ),       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"SEX\", \"RACE\")),           selected = \"RACE\",           multiple = FALSE,           fixed = FALSE         )       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Response Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:35.5875 pid:1110 token:[] teal.modules.general Initializing tm_g_response if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simple scatterplot ‚Äî tm_g_scatterplot","title":"Create a simple scatterplot ‚Äî tm_g_scatterplot","text":"Create plot ggplot2[geom_point] function","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simple scatterplot ‚Äî tm_g_scatterplot","text":"","code":"tm_g_scatterplot(   label = \"Scatterplot\",   x,   y,   color_by = NULL,   size_by = NULL,   row_facet = NULL,   col_facet = NULL,   plot_height = c(600, 200, 2000),   plot_width = NULL,   alpha = c(1, 0, 1),   shape = shape_names,   size = c(5, 1, 15),   max_deg = 5L,   rotate_xaxis_labels = FALSE,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\",     \"test\"),   pre_output = NULL,   post_output = NULL,   table_dec = 4,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a simple scatterplot ‚Äî tm_g_scatterplot","text":"label (character) Label shown navigation item module. x (data_extract_spec list multiple data_extract_spec) Variable names selected plot along x-axis default. y (data_extract_spec list multiple data_extract_spec) Variable names selected plot along y-axis default. color_by optional (data_extract_spec list multiple data_extract_spec) Defines color encoding. NULL color encoding option displayed. size_by optional (data_extract_spec list multiple data_extract_spec) Defines point size encoding. NULL size encoding option displayed. row_facet optional, (data_extract_spec list multiple data_extract_spec) data columns use faceting rows. col_facet optional, (data_extract_spec list multiple data_extract_spec) data use faceting columns. plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. alpha optional, (numeric) scalar plot points fixed opacity. slider presented adjust plot point opacity dynamically can vector length three c(value, min, max). shape optional, (character) character vector English names shape, e.g. c(\"triangle\", \"square\", \"circle\"). defaults shape_names. complete list vignette(\"ggplot2-specs\", package=\"ggplot2\"). size optional, (numeric) scalar plot point sizes fixed size slider presented adjust plot point sizes dynamically can vector length three c(value, min, max). max_deg optional, (integer) maximum degree polynomial trend line. Must less 1. rotate_xaxis_labels optional, (logical) Whether rotate plot X axis labels. rotate default (FALSE). ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful. table_dec optional, (integer) Number decimal places used round numeric values table. ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\")","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a simple scatterplot ‚Äî tm_g_scatterplot","text":"examples, please see vignette \"Using scatterplot\" via vignette(\"using-scatterplot\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a simple scatterplot ‚Äî tm_g_scatterplot","text":"","code":"# Scatterplot of variables from ADSL dataset library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_g_scatterplot(       label = \"Scatterplot Choices\",       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),           selected = \"AGE\",           multiple = FALSE,           fixed = FALSE         )       ),       y = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\")),           selected = \"BMRKR1\",           multiple = FALSE,           fixed = FALSE         )       ),       color_by = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\", \"RACE\", \"REGION1\")),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       ),       size_by = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\", \"RACE\", \"REGION1\")),           selected = \"AGE\",           multiple = FALSE,           fixed = FALSE         )       ),       row_facet = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\", \"RACE\", \"REGION1\")),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       ),       col_facet = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\", \"BMRKR2\", \"RACE\", \"REGION1\")),           selected = NULL,           multiple = FALSE,           fixed = FALSE         )       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Scatterplot Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:38.0558 pid:1110 token:[] teal.modules.general Initializing tm_g_scatterplot if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplotmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a scatterplot matrix ‚Äî tm_g_scatterplotmatrix","title":"Create a scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"available datasets choose dataset selector determined argument variables.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplotmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"","code":"tm_g_scatterplotmatrix(   label = \"Scatterplot Matrix\",   variables,   plot_height = c(600, 200, 2000),   plot_width = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplotmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"label (character) Label shown navigation item module. variables (data_extract_spec list multiple data_extract_spec) Plotting variables incoming dataset filtering selecting. case data_extract_spec use select_spec(..., ordered = TRUE) plot elements rendered according selection order. plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplotmatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"examples, please see vignette \"Using scatterplot matrix\" via vignette(\"using-scatterplot-matrix\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_g_scatterplotmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a scatterplot matrix ‚Äî tm_g_scatterplotmatrix","text":"","code":"# Scatterplot matrix of variables from ADSL dataset library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADRS <- synthetic_cdisc_data(\"latest\")$adrs  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     check = TRUE   ),   modules = modules(     tm_g_scatterplotmatrix(       label = \"Scatterplot matrix\",       variables = list(         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADSL),             selected = c(\"AGE\", \"RACE\", \"SEX\"),             multiple = TRUE,             ordered = TRUE,             fixed = FALSE           )         ),         data_extract_spec(           dataname = \"ADRS\",           filter = filter_spec(             label = \"Select endpoints:\",             vars = c(\"PARAMCD\", \"AVISIT\"),             choices = value_choices(ADRS, c(\"PARAMCD\", \"AVISIT\"), c(\"PARAM\", \"AVISIT\")),             selected = \"INVET - END OF INDUCTION\",             multiple = TRUE           ),           select = select_spec(             label = \"Select variables:\",             choices = variable_choices(ADRS),             selected = c(\"AGE\", \"AVAL\", \"ADY\"),             multiple = TRUE,             ordered = TRUE,             fixed = FALSE           )         )       )     )   ) ) #> [INFO] 2022-06-14 17:42:42.5447 pid:1110 token:[] teal.modules.general Initializing tm_g_scatterplotmatrix if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_missing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing data module ‚Äî tm_missing_data","title":"Missing data module ‚Äî tm_missing_data","text":"Present analysis missing observations patients.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_missing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing data module ‚Äî tm_missing_data","text":"","code":"tm_missing_data(   label = \"Missing data\",   plot_height = c(600, 400, 5000),   plot_width = NULL,   ggtheme = c(\"classic\", \"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"void\",     \"test\"),   ggplot2_args = list(`Combinations Hist` = teal.widgets::ggplot2_args(labs =     list(caption = NULL)), `Combinations Main` = teal.widgets::ggplot2_args(labs =     list(title = NULL))),   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_missing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing data module ‚Äî tm_missing_data","text":"label (character) Label shown navigation item module. plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"classic\". ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Summary Obs\", \"Summary Patients\", \"Combinations Main\", \"Combinations Hist\", \"Subject\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_missing_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing data module ‚Äî tm_missing_data","text":"","code":"library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADRS <- synthetic_cdisc_data(\"latest\")$adrs  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADRS\", ADRS, code = \"ADRS <- synthetic_cdisc_data(\\\"latest\\\")$adrs\"),     check = TRUE   ),   modules = modules(     tm_missing_data(       ggplot2_args = list(         \"Combinations Hist\" =           teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot produced by Missing Data Module\", caption = NULL)),         \"Combinations Main\" = teal.widgets::ggplot2_args(labs = list(title = NULL))       )     )   ) ) #> [INFO] 2022-06-14 17:42:46.5879 pid:1110 token:[] teal.modules.general Initializing tm_missing_data if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Outliers Module ‚Äî tm_outliers","title":"Outliers Module ‚Äî tm_outliers","text":"Module analyze identify outliers using different methods","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outliers Module ‚Äî tm_outliers","text":"","code":"tm_outliers(   label = \"Outliers Module\",   outlier_var,   categorical_var = NULL,   ggtheme = c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\",     \"test\"),   ggplot2_args = teal.widgets::ggplot2_args(),   plot_height = c(600, 200, 2000),   plot_width = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outliers Module ‚Äî tm_outliers","text":"label (character) Label shown navigation item module. outlier_var (data_extract_spec list multiple data_extract_spec) variable consider outliers analysis. categorical_var (data_extract_spec list multiple data_extract_spec) categorical factor split selected outlier variables . ggtheme optional, (character) ggplot2 theme used default. One c(\"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\", \"void\", \"test\"). theme can chosen user session. Defaults \"gray\". ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. argument merged options variable teal.ggplot2_args default module setup. List names match following: c(\"default\", \"Boxplot\",\"Density plot\",\"Cumulative distribution plot\"). details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). plot_height optional, (numeric) vector length three c(value, min max) slider encoding plot height. plot_width optional, (numeric) vector length three c(value, min max) slider encoding plot width. pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outliers Module ‚Äî tm_outliers","text":"","code":"library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl  fact_vars_adsl <- names(Filter(isTRUE, sapply(ADSL, is.factor))) vars <- choices_selected(variable_choices(ADSL, fact_vars_adsl))  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_outliers(       outlier_var = list(         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             label = \"Select variable:\",             choices = variable_choices(ADSL, c(\"AGE\", \"BMRKR1\")),             selected = \"AGE\",             multiple = FALSE,             fixed = FALSE           )         )       ),       categorical_var = data_extract_spec(         dataname = \"ADSL\",         filter = filter_spec(           vars = vars,           choices = value_choices(ADSL, vars$selected),           selected = value_choices(ADSL, vars$selected),           multiple = TRUE         )       ),       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Outliers Module\"))     )   ) ) #> [INFO] 2022-06-14 17:42:48.7637 pid:1110 token:[] teal.modules.general Initializing tm_outliers if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_t_crosstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simple cross-table ‚Äî tm_t_crosstable","title":"Create a simple cross-table ‚Äî tm_t_crosstable","text":"Create simple cross-table","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_t_crosstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simple cross-table ‚Äî tm_t_crosstable","text":"","code":"tm_t_crosstable(   label = \"Cross Table\",   x,   y,   show_percentage = TRUE,   show_total = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_t_crosstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a simple cross-table ‚Äî tm_t_crosstable","text":"label (character) Label shown navigation item module. x (data_extract_spec list multiple data_extract_spec) Object available choices pre-selected option variable X - row values. case data_extract_spec use select_spec(..., ordered = TRUE) table elements rendered according selection order. y (data_extract_spec list multiple data_extract_spec) Object available choices pre-selected option variable Y - column values data_extract_spec must allow multiple selection case. show_percentage optional, (logical) Whether show percentages (relevant x factor). Defaults TRUE. show_total optional, (logical) Whether show total column. Defaults TRUE. pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful. basic_table_args (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged options variable teal.basic_table_args default module setup. details see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\")","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_t_crosstable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a simple cross-table ‚Äî tm_t_crosstable","text":"examples, please see vignette \"Using cross table\" via vignette(\"using-cross-table\", package = \"teal.modules.general\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_t_crosstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a simple cross-table ‚Äî tm_t_crosstable","text":"","code":"# Percentage cross table of variables from ADSL dataset library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     check = TRUE   ),   modules = modules(     tm_t_crosstable(       label = \"Cross Table\",       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, subset = function(data) {             idx <- !vapply(data, inherits, logical(1), c(\"Date\", \"POSIXct\", \"POSIXlt\"))             return(names(data)[idx])           }),           selected = \"COUNTRY\",           multiple = TRUE,           ordered = TRUE,           fixed = FALSE         )       ),       y = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Select variable:\",           choices = variable_choices(ADSL, subset = function(data) {             idx <- vapply(data, is.factor, logical(1))             return(names(data)[idx])           }),           selected = \"SEX\",           multiple = FALSE,           fixed = FALSE         )       ),       basic_table_args = teal.widgets::basic_table_args(subtitles = \"Table generated by Crosstable Module\")     )   ) ) #> [INFO] 2022-06-14 17:42:51.2477 pid:1110 token:[] teal.modules.general Initializing tm_t_crosstable if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_variable_browser.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Browser Teal Module ‚Äî tm_variable_browser","title":"Variable Browser Teal Module ‚Äî tm_variable_browser","text":"variable browser provides table variable names labels plot visualizes content particular variable.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_variable_browser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Browser Teal Module ‚Äî tm_variable_browser","text":"","code":"tm_variable_browser(   label = \"Variable Browser\",   datasets_selected = character(0),   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_variable_browser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Browser Teal Module ‚Äî tm_variable_browser","text":"label (character) Label shown navigation item module. datasets_selected (character) vector datasets shown order. Names vector correspond datasets names. vector length zero (default) datasets shown. pre_output (shiny.tag, optional) text placed output put output context. example title. post_output (shiny.tag, optional) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged options variable teal.ggplot2_args default module setup. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\")","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_variable_browser.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variable Browser Teal Module ‚Äî tm_variable_browser","text":"Numeric columns fewer 30 distinct values can treated either factors numbers checkbox allowing users switch treated (< 6 unique values default categorical, otherwise numeric).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/tm_variable_browser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable Browser Teal Module ‚Äî tm_variable_browser","text":"","code":"library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADTTE <- synthetic_cdisc_data(\"latest\")$adtte  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data(\\\"latest\\\")$adsl\"),     cdisc_dataset(\"ADTTE\", ADTTE, code = \"ADTTE <- synthetic_cdisc_data(\\\"latest\\\")$adtte\"),     check = TRUE   ),   modules(     tm_variable_browser(       label = \"Variable browser\",       ggplot2_args = teal.widgets::ggplot2_args(labs = list(subtitle = \"Plot generated by Variable Browser Module\")),     )   ) ) #> [INFO] 2022-06-14 17:42:56.1888 pid:1110 token:[] teal.modules.general Initializing tm_variable_browser if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/validate_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates the variable browser inputs ‚Äî validate_input","title":"Validates the variable browser inputs ‚Äî validate_input","text":"Validates variable browser inputs","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/validate_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates the variable browser inputs ‚Äî validate_input","text":"","code":"validate_input(input, plot_var, datasets)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/validate_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates the variable browser inputs ‚Äî validate_input","text":"input (session$input) shiny session input plot_var (list) list data frame array variable names datasets (FilteredData) datasets passed module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/validate_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates the variable browser inputs ‚Äî validate_input","text":"logical TRUE validations pass; Shiny validation error otherwise","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_missings_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizes missings occurrence ‚Äî var_missings_info","title":"Summarizes missings occurrence ‚Äî var_missings_info","text":"Summarizes missings occurrence vector","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_missings_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizes missings occurrence ‚Äî var_missings_info","text":"","code":"var_missings_info(x)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_missings_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizes missings occurrence ‚Äî var_missings_info","text":"x vector type length","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_missings_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizes missings occurrence ‚Äî var_missings_info","text":"text describing NA occurrence.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizes variable ‚Äî var_summary_table","title":"Summarizes variable ‚Äî var_summary_table","text":"Creates html summary statistics relevant data type. numeric values returns central tendency measures, factor returns level counts, Date  date range, just number levels.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizes variable ‚Äî var_summary_table","text":"","code":"var_summary_table(x, numeric_as_factor, dt_rows, outlier_definition)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizes variable ‚Äî var_summary_table","text":"x vector type numeric_as_factor logical numeric variable treated factor dt_rows numeric current/latest DT page length outlier_definition 0 outliers removed, otherwise outliers (outlier_definition*IQR /Q1/Q3 removed)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/var_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizes variable ‚Äî var_summary_table","text":"text simple statistics.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/variable_type_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"Get icons represent variable types dataset","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/variable_type_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"","code":"variable_type_icons(var_type)"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/variable_type_icons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"var_type (character) R internal types (classes).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/variable_type_icons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"(character)vector HTML icons corresponding data type column.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/variable_type_icons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"","code":"teal.modules.general:::variable_type_icons(c(   \"integer\", \"numeric\", \"logical\", \"Date\", \"POSIXct\", \"POSIXlt\",   \"factor\", \"character\", \"unknown\", \"\" )) #>  [1] \"<i class=\\\"fa fa-sort-numeric-up\\\" role=\\\"presentation\\\" aria-label=\\\"sort-numeric-up icon\\\"><\/i>\" #>  [2] \"<i class=\\\"fa fa-sort-numeric-up\\\" role=\\\"presentation\\\" aria-label=\\\"sort-numeric-up icon\\\"><\/i>\" #>  [3] \"<i class=\\\"fa fa-pause\\\" role=\\\"presentation\\\" aria-label=\\\"pause icon\\\"><\/i>\"                     #>  [4] \"<i class=\\\"fa fa-calendar\\\" role=\\\"presentation\\\" aria-label=\\\"calendar icon\\\"><\/i>\"               #>  [5] \"<i class=\\\"fa fa-calendar\\\" role=\\\"presentation\\\" aria-label=\\\"calendar icon\\\"><\/i>\"               #>  [6] \"<i class=\\\"fa fa-calendar\\\" role=\\\"presentation\\\" aria-label=\\\"calendar icon\\\"><\/i>\"               #>  [7] \"<i class=\\\"fa fa-chart-bar\\\" role=\\\"presentation\\\" aria-label=\\\"chart-bar icon\\\"><\/i>\"             #>  [8] \"<i class=\\\"fa fa-keyboard\\\" role=\\\"presentation\\\" aria-label=\\\"keyboard icon\\\"><\/i>\"               #>  [9] \"<i class=\\\"fa fa-question-circle\\\" role=\\\"presentation\\\" aria-label=\\\"question-circle icon\\\"><\/i>\" #> [10] \"\""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/varname_w_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable name with label ‚Äî varname_w_label","title":"Get variable name with label ‚Äî varname_w_label","text":"Get variable name label","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/varname_w_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable name with label ‚Äî varname_w_label","text":"","code":"varname_w_label(   var_names,   dataset,   wrap_width = 80,   prefix = NULL,   suffix = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/varname_w_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable name with label ‚Äî varname_w_label","text":"var_names (character) Name variable extract labels . dataset (dataset) Name analysis dataset. wrap_width (numeric) Number characters wrap original label . Defaults 80. prefix (character) String paste beginning variable name label. suffix (character) String paste end variable name label.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/varname_w_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable name with label ‚Äî varname_w_label","text":"(character) String variable name label.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/reference/varname_w_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get variable name with label ‚Äî varname_w_label","text":"","code":"if (FALSE) { library(scda) ADSL <- synthetic_cdisc_data(\"latest\")$adsl  varname_w_label(\"AGE\", ADSL) }"},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"enhancements-0-2-14","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.14","text":"New teal module tm_front_page simplify creating front page teal apps. Added slider widget control font size label tm_g_scatterplot. Output integers without decimal places selecting points tm_g_scatterplot. Improved names code chunks shown Debug Info. Improved validation message number regressors big tm_a_regression.R.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"bug-fixes-0-2-14","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.14","text":"Fixed wrong validation tm_a_pca. Fixed crash deselecting categorical factor tm_outliers.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"miscellaneous-0-2-14","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.14","text":"Added template pkgdown site. Updated package authors.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"enhancements-0-2-13","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.13","text":"Rewrote modules use moduleServer updated call plot_with_settings_srv changes teal.devel. Fixed tracking selection order data_extract_ui. selectors can return ordered selection one specifies ordered = TRUE select_spec. Switched order tm_missing_data combination plot show data descending order. Changed variable levels output tm_missing_data allow numerical sorting.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"miscellaneous-0-2-13","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.13","text":"Removed unneeded n row tm_t_crosstable. Replaced calls teal::root_modules teal::modules following deprecation teal::root_modules. Adjusted package imports take account changes teal framework. Added ‚ÄúGetting started teal.modules.general‚Äù vignette. Updated README file. Moved ggmosaic package Depends Imports DESCRIPTION file.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"enhancements-0-2-12","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.12","text":"Added support logging logger package added info level logs upon initialization module. Added support custom arguments ggplot2::labs ggplot2::theme plot based modules. Added support custom arguments rtables::basic_table tm_t_crosstable. Updated tm_outliers, tm_g_scatterplotmatrix, tm_g_association, tm_t_crosstable modules adopt new teal.transform::data_merge_srv teal.transform::data_extract_multiple_srv modules. Distinguished bars representing NA plot depicting counts tm_variable_browser different color fill. Modified summary statistics table numeric columns tm_variable_browser reflect plot outliers removed. Added option remove missing values tm_variable_browser histogram factor like variables. Added ability sort Variable Type tm_variable_browser separating variable type icons column. Updated Grouped Subject tab tm_missing_data module present data way Summary tab . Added support NA level grouping variable variable levels table tm_missing_data module. Added informative labels level grouping variable variable levels table tm_missing_data module. Added checkbox tm_g_scatterplot toggle option free x y axis scales whenever faceting arguments provided. Used browser-side processing tm_data_table Buttons extension download full table. Added example advanced usage DT module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"bug-fixes-0-2-12","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.12","text":"Fixed error tm_variable_browser selected column logical(1). Fixed bugs modules‚Äô vignette examples.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"miscellaneous-0-2-12","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.12","text":"Added R version requirement R >= 3.6. Removed input_id argument teal.transform::data_merge_module calls modules. Refactored defunct teal.devel::data_extract_input replacement teal.transform::data_extract_ui. Updated teal.transform::data_merge_srv use dplyr::inner_join instead dplyr::left_join tm_outliers module. Removed overlay statistics table tm_g_distribution module. Removed dependency test.nest package. Removed dependency utils.nest package replaced functions equivalents checkmate package.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"new-features-0-2-11","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.modules.general 0.2.11","text":"new module, tm_file_viewer, added visualization static files. new module, tm_g_distribution, added distribution analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"bug-fixes-0-2-11","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.11","text":"Fixed bar plot order factor variables tm_variable_browser.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"enhancements-0-2-11","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.11","text":"Updated examples tests using scda synthetic data replace random.cdisc.data. #### tm_variable_browser Added sparkline support Date/POSIXct/POSIXlt variable types. Fixed histograms contain least two bars.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_outliers-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_outliers","title":"teal.modules.general 0.2.11","text":"Added filter_spec support. Simplified returned R code. Support select_spec categorical variables.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_g_scatterplotmatrix-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplotmatrix","title":"teal.modules.general 0.2.11","text":"Added ordered select input support. Decoupled dataset list variables list parameters.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_g_association-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_association","title":"teal.modules.general 0.2.11","text":"Added ordered select input support.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_t_crosstable-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_t_crosstable","title":"teal.modules.general 0.2.11","text":"Added ordered select input support.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_g_scatterplot-0-2-11","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplot","title":"teal.modules.general 0.2.11","text":"Modified trend line feature scatterplot display raw equation equal actual y value actual x values plugged .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"miscellaneous-0-2-11","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.11","text":"Updated LICENCE README new package references. Added error_on_lint: TRUE .lintr. Updated quantile type = 2 argument tm_variable_browser line STREAM.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"enhancements-0-2-10","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.10","text":"Refactored internal code modules optimize performance. Refactored tm_g_scatterplot compute trend line statistics using ggpmisc::stat_poly_eq simplify code labels group plot. Refactored tm_g_scatterplot enable filtering via Encoding Panel using new filter_spec functionality. Added support logical variables tm_variable_browser. Updated tm_outliers handle non-CDISC datasets. Updated UI tm_variable_browser factor character variables 30 levels. Updated sparklines remove NA values numeric variables. Added checkbox display number observations plot tm_g_scatterplot. Added validation statements tm_g_scatterplot handling users choosing one facet variable. Improved performance tm_variable_browser efficient sparkline generation. Added html code type datasets labels inside tm_missing_data. Improved styling tool tips tm_a_regression, tm_missing_data tm_variable_browser.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"enhancements-0-2-9","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.general 0.2.9","text":"Added download, enlarge resize graph options tm_variable_browser module. Added download expand options table tm_t_crosstable. Enabled selection custom datasets tm_variable_browser datasets_selected argument. Allowed dataset variables used grouping variables variable levels tab tm_missing_data, just selected displayed rows table. Enabled brushing points NA categories facetting tm_g_scatterplot.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"bug-fixes-0-2-9","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.general 0.2.9","text":"Added persistence number entries displayed data tables. Removed ‚Äòtreat variable factor‚Äô checkbox tm_variable_browser graph shown. Fixed DT length reset tm_variable_browser ‚ÄúShow parent dataset variables‚Äù checkbox tick.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_outliers-0-2-8","dir":"Changelog","previous_headings":"New Module","what":"tm_outliers","title":"teal.modules.general 0.2.8","text":"Added new module tm_outliers analyse outliers datasets.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_g_scatterplot-0-2-8","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplot","title":"teal.modules.general 0.2.8","text":"Added max_deg optional argument scatterplot allow users choose maximum smoothing degree trend line. Added column row facetting functionality scatterplot. Added possibility specify type join tm_t_crosstable. Incorporate missings resulting non inner join.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"bug-fixes-0-2-8","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"teal.modules.general 0.2.8","text":"Fixed edge case errors tm_missing_data caused input dataset categorical variables data.frame instead tibble. Fixed tm_a_pca biplot plot coloring factor/character/numeric < 6 values variable. Fixed typo outlier definition tm_variable_browser.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"miscellaneous-0-2-8","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.8","text":"Sparklines longer shown numeric variables 100000 rows. Colors legend plot. Replaced ‚ÄúShow variables ADSL‚Äù checkbox general ‚ÄúShow parent dataset variables‚Äù. Capitalize default module labels. outputs tm_missing_data conditional data CDISC data. Added pre_output post_output arguments tm_data_table, tm_missing_data, tm_variable_browser. Fixed issue tm_data_table selecting ‚Äúshow distinct rows‚Äù variable names non-alphanumeric characters.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_variable_browser-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_variable_browser","title":"teal.modules.general 0.2.7","text":"Introduced sparklines quick, inline variable summaries. Added option remove outliers. Histograms statistics tables now displayed variables type Date, POSIXct POSIXlt. Character variable summary statistics tables now displayed decreasing order occurrences instead alphabetical. Display number non-missing rows n statistics table numeric variables. Added ability treat numeric variables categorical. tm_variable_browser shows 30 50 levels divided 2 columns character/factor variables 30 unique levels.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_a_regression-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_a_regression","title":"teal.modules.general 0.2.7","text":"Added support outlier labels tm_a_regression provided additional optional argument, default_outlier_label can used specify default column used label outliers.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_g_scatterplot-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_scatterplot","title":"teal.modules.general 0.2.7","text":"Implemented trend line. Added marginal density plots. Added option display rug plot axes. Added shape point color arguments. latter users colourpicker::colourInput. Added size_by variable scatterplot allowed point size mapped numeric variable.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_missing_data-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_missing_data","title":"teal.modules.general 0.2.7","text":"Added bar chart missing data combination plot. Removed keys missing data combinations plot selected.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_g_bivariate-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_bivariate","title":"teal.modules.general 0.2.7","text":"Bivariate plots two continuous variables now allow adding lines. Show labels x axis selecting categorical variable fixed issues deselecting variables datasets encodings panel (including addition meaningful warnings).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tm_a_pca-0-2-7","dir":"Changelog","previous_headings":"Enhancements","what":"tm_a_pca","title":"teal.modules.general 0.2.7","text":"Updated include Plot settings Plot specific settings.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"miscellaneous-0-2-7","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.general 0.2.7","text":"Integrated is_single_dataset argument data_extract_input function calls simplify encodings panel UI. Moved code argument cdisc_dataset (cdisc_data) examples vignettes. Require ggmosaic version >= 0.3.0.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-026","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.6","title":"teal.modules.general 0.2.6","text":"Adds additional plot settings themes tm_g_association, tm_g_response, tm_g_scatterplot, well point size opacity settings tm_g_association tm_g_scatterplot. Replace pickerInput optionalSelectInput tm_data_table. Adds new facet parameter tm_g_bivariate specify whether facet encodings elements visible user default. Replace plot_with_height module new plot_with_settings module. Missing data module now uses chunks get reproducible R code. New theme missing data module new label positioning. tm_data_table: allow developers pass arguments DT::dataTable use pickerInput select variables. tm_g_response new argument count_labels. Counts might assessed frequency plot . Moved missing data module summary plot footer elements tool tip encodings panels. Replaced base plots tm_a_regression ggplot2. Added optional slider adjust width plot_with_settings. Handle Inf data gracefully. tm_variable_browser now outputs summary table factors missing values.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-025","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.5","title":"teal.modules.general 0.2.5","text":"Adds ggplot call inside chunks modules. Pass dataname get_rcode_srv. Uses utils function standardize plot label generation. Improved handling variable labels. Removed ‚ÄúAdd filter variable‚Äù button variable browser module. Scatterplot matrix module now automatically converts characters factors message.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-024","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.4","title":"teal.modules.general 0.2.4","text":"New PCA module. Documentation fix cross table module. Display variable labels drop-menu data table (#393). Optional subsetting ordering datasets tm_data_table. Use teal.code::chunks_push_data_merge include merge code reproducibility code. consistent coloring behavior bivariate plots. Updates missing data module. Updated graph axis labels following modules: bivariate plot, missing data, response plot, regression module, scatterplot, scatterplot matrix. Simplify scatterplot matrix display plot within one dataset .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-023","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.3","title":"teal.modules.general 0.2.3","text":"Fixed naming tm_variable_browser. Correlation added Scatter Plot Matrix. Opacity slider added tm_bivariate. Fixes due bug teal.devel#313. Performance enhancements missing data module. Fix bug reactivity scatterplot matrix module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-022","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.2","title":"teal.modules.general 0.2.2","text":"New module summarise missing data. Refactor variable browser module. Correct display density / frequency option bivariate plot.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-021","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.1","title":"teal.modules.general 0.2.1","text":"Fix magrittr loading reproducible code.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-020","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.2.0","title":"teal.modules.general 0.2.0","text":"Refactor functions data extract data merge. Create sample_app.R demonstrating teal.modules.general modules. Rename tm_table tm_cross_table. Include show R code modules. Merge tm_cross_table tm_t_percentage_table one module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.general/news/index.html","id":"tealmodulesgeneral-010","dir":"Changelog","previous_headings":"","what":"teal.modules.general 0.1.0","title":"teal.modules.general 0.1.0","text":"Initial release.","code":""}]
